trail ID,method,parameters,metrics,performance
0,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 7; weights = distance,f1 and cv,0.686 +- 0.463
1,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 14; weights = distance,f1 and cv,0.857 +- 0.229
2,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 14; weights = distance,f1 and cv,0.816 +- 0.261
3,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 14; weights = distance,f1 and cv,0.661 +- 0.372
4,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 13; p = 3; weights = distance,f1 and cv,0.619 +- 0.687
5,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 13; p = 1; weights = distance,f1 and cv,0.719 +- 0.477
6,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 13; p = 1; weights = distance,f1 and cv,0.721 +- 0.257
7,mlp,_scale = True; activation = logistic; alpha = 0.00530026476357; batch_size = auto; hidden_layer_sizes[0] = 195; hidden_layer_sizes[1] = 205; learning_rate = adaptive; learning_rate_init = 0.424197908329; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.533 +- 0.533
8,mlp,_scale = True; activation = logistic; alpha = 0.00798119444472; batch_size = auto; hidden_layer_sizes[0] = 216; hidden_layer_sizes[1] = 12; learning_rate = adaptive; learning_rate_init = 0.398794294569; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.895 +- 0.132
9,mlp,_scale = True; activation = logistic; alpha = 0.00379155634861; batch_size = auto; hidden_layer_sizes[0] = 172; hidden_layer_sizes[1] = 99; learning_rate = adaptive; learning_rate_init = 0.598925397734; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.431 +- 0.704
10,mlp,_scale = True; activation = identity; alpha = 0.00137991259211; batch_size = auto; hidden_layer_sizes[0] = 203; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.597 +- 0.515
11,mlp,_scale = True; activation = identity; alpha = 0.000932548884706; batch_size = auto; hidden_layer_sizes[0] = 155; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.641 +- 0.339
12,knn,_scale = True; algorithm = ball_tree; leaf_size = 11; metric = minkowski; n_neighbors = 1; p = 2; weights = distance,f1 and cv,0.737 +- 0.143
13,knn,_scale = True; algorithm = ball_tree; leaf_size = 24; metric = minkowski; n_neighbors = 11; p = 2; weights = distance,f1 and cv,0.790 +- 0.305
14,knn,_scale = True; algorithm = ball_tree; leaf_size = 24; metric = minkowski; n_neighbors = 11; p = 3; weights = distance,f1 and cv,0.658 +- 0.285
15,mlp,_scale = True; activation = logistic; alpha = 0.00689815348979; batch_size = auto; hidden_layer_sizes[0] = 57; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.728 +- 0.174
16,mlp,_scale = True; activation = logistic; alpha = 0.0039549442717; batch_size = auto; hidden_layer_sizes[0] = 259; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.753 +- 0.189
17,mlp,_scale = True; activation = logistic; alpha = 0.00281476836221; batch_size = auto; hidden_layer_sizes[0] = 259; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.696 +- 0.524
18,mlp,_scale = True; activation = relu; alpha = 0.0034843610708; batch_size = auto; hidden_layer_sizes[0] = 285; hidden_layer_sizes[1] = 123; hidden_layer_sizes[2] = 251; learning_rate = adaptive; learning_rate_init = 0.224074210427; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.795 +- 0.154
19,mlp,_scale = True; activation = relu; alpha = 0.00542506698297; batch_size = auto; hidden_layer_sizes[0] = 176; hidden_layer_sizes[1] = 80; hidden_layer_sizes[2] = 106; learning_rate = adaptive; learning_rate_init = 0.0211862121565; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.714 +- 0.211
20,mlp,_scale = True; activation = relu; alpha = 0.00842941088502; batch_size = auto; hidden_layer_sizes[0] = 245; hidden_layer_sizes[1] = 215; hidden_layer_sizes[2] = 215; learning_rate = adaptive; learning_rate_init = 0.841552109636; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.629 +- 0.098
21,mlp,_scale = True; activation = tanh; alpha = 0.00597255742769; batch_size = auto; hidden_layer_sizes[0] = 233; hidden_layer_sizes[1] = 118; learning_rate = constant; learning_rate_init = 0.931582061106; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.748 +- 0.310
22,mlp,_scale = True; activation = tanh; alpha = 0.00758679628786; batch_size = auto; hidden_layer_sizes[0] = 212; hidden_layer_sizes[1] = 159; learning_rate = constant; learning_rate_init = 0.511327574962; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.764 +- 0.172
23,mlp,_scale = True; activation = tanh; alpha = 0.00293353681982; batch_size = auto; hidden_layer_sizes[0] = 207; hidden_layer_sizes[1] = 154; learning_rate = constant; learning_rate_init = 0.599525801536; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.743 +- 0.285
24,mlp,_scale = True; activation = identity; alpha = 0.00757508457799; batch_size = auto; hidden_layer_sizes[0] = 169; learning_rate = adaptive; learning_rate_init = 0.788346166024; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.789 +- 0.312
25,mlp,_scale = True; activation = identity; alpha = 0.00787731013044; batch_size = auto; hidden_layer_sizes[0] = 11; learning_rate = adaptive; learning_rate_init = 0.643536374804; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.809 +- 0.134
26,mlp,_scale = True; activation = identity; alpha = 0.00333255752017; batch_size = auto; hidden_layer_sizes[0] = 11; learning_rate = adaptive; learning_rate_init = 0.261893435241; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.765 +- 0.164
27,mlp,_scale = True; activation = identity; alpha = 0.00716646901959; batch_size = auto; hidden_layer_sizes[0] = 187; hidden_layer_sizes[1] = 224; hidden_layer_sizes[2] = 160; learning_rate = constant; learning_rate_init = 0.204547246006; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.625 +- 0.265
28,mlp,_scale = True; activation = identity; alpha = 0.000774703195752; batch_size = auto; hidden_layer_sizes[0] = 99; hidden_layer_sizes[1] = 200; hidden_layer_sizes[2] = 210; learning_rate = constant; learning_rate_init = 0.596451207957; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.450 +- 0.621
29,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = euclidean; n_neighbors = 1; weights = uniform,f1 and cv,0.820 +- 0.167
30,knn,_scale = True; algorithm = kd_tree; leaf_size = 1; metric = euclidean; n_neighbors = 13; weights = uniform,f1 and cv,0.626 +- 0.642
31,rf,criterion = gini; max_depth = 9; max_features = 0.367839067747; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.785 +- 0.306
32,rf,criterion = gini; max_depth = 9; max_features = 0.402117977448; min_samples_leaf = 1; n_estimators = 100; n_jobs = -1,f1 and cv,0.860 +- 0.074
33,rf,criterion = gini; max_depth = 9; max_features = 0.382966272577; min_samples_leaf = 1; n_estimators = 100; n_jobs = -1,f1 and cv,0.752 +- 0.309
34,mlp,_scale = True; activation = logistic; alpha = 0.000791933609875; batch_size = auto; hidden_layer_sizes[0] = 100; learning_rate = invscaling; learning_rate_init = 0.630083279272; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.593 +- 0.665
35,mlp,_scale = True; activation = logistic; alpha = 0.00866503894322; batch_size = auto; hidden_layer_sizes[0] = 72; learning_rate = invscaling; learning_rate_init = 0.464195768863; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.612 +- 0.660
36,logreg,C = 0.0214259326819; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 0.000345805380725,f1 and cv,0.833 +- 0.230
37,logreg,C = 0.683408146675; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 1214.1761078,f1 and cv,0.752 +- 0.372
38,logreg,C = 0.017734143058; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 0.00123640541548,f1 and cv,0.683 +- 0.356
39,mlp,_scale = True; activation = logistic; alpha = 0.00888164070317; batch_size = auto; hidden_layer_sizes[0] = 102; learning_rate = constant; learning_rate_init = 0.00430280495011; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.750 +- 0.276
40,mlp,_scale = True; activation = logistic; alpha = 0.00476397875238; batch_size = auto; hidden_layer_sizes[0] = 16; learning_rate = constant; learning_rate_init = 0.883876615927; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.861 +- 0.268
41,mlp,_scale = True; activation = logistic; alpha = 0.00733166639002; batch_size = auto; hidden_layer_sizes[0] = 16; learning_rate = constant; learning_rate_init = 0.444678703048; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.711 +- 0.178
42,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = minkowski; n_neighbors = 9; p = 2; weights = uniform,f1 and cv,0.735 +- 0.230
43,knn,_scale = True; algorithm = kd_tree; leaf_size = 19; metric = minkowski; n_neighbors = 15; p = 3; weights = uniform,f1 and cv,0.617 +- 0.484
44,knn,_scale = True; algorithm = kd_tree; leaf_size = 32; metric = chebyshev; n_neighbors = 1; weights = uniform,f1 and cv,0.598 +- 0.286
45,knn,_scale = True; algorithm = kd_tree; leaf_size = 31; metric = chebyshev; n_neighbors = 4; weights = uniform,f1 and cv,0.626 +- 0.322
46,mlp,_scale = True; activation = relu; alpha = 0.00759969817544; batch_size = auto; beta_1 = 0.805257558344; beta_2 = 0.919639253787; hidden_layer_sizes[0] = 271; hidden_layer_sizes[1] = 156; hidden_layer_sizes[2] = 102; learning_rate_init = 0.538063857136; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.478 +- 0.556
47,mlp,_scale = True; activation = relu; alpha = 0.00183811745554; batch_size = auto; beta_1 = 0.917281907651; beta_2 = 0.909306026217; hidden_layer_sizes[0] = 94; hidden_layer_sizes[1] = 4; hidden_layer_sizes[2] = 41; learning_rate_init = 0.0100400664162; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.698 +- 0.344
48,mlp,_scale = True; activation = relu; alpha = 0.0047834096605; batch_size = auto; hidden_layer_sizes[0] = 238; hidden_layer_sizes[1] = 101; learning_rate = constant; learning_rate_init = 0.488408572136; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.705 +- 0.415
49,mlp,_scale = True; activation = relu; alpha = 0.00710954274516; batch_size = auto; hidden_layer_sizes[0] = 14; hidden_layer_sizes[1] = 230; learning_rate = constant; learning_rate_init = 0.786669723308; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.756 +- 0.196
50,rf,criterion = entropy; max_depth = 6; max_features = 0.232233143849; min_samples_leaf = 1; n_estimators = 100; n_jobs = -1,f1 and cv,0.731 +- 0.292
51,rf,criterion = entropy; max_depth = 5; max_features = 0.59182882637; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.680 +- 0.412
52,mlp,_scale = True; activation = logistic; alpha = 0.00629100817992; batch_size = auto; beta_1 = 0.809151964451; beta_2 = 0.993608194363; hidden_layer_sizes[0] = 256; learning_rate_init = 0.612522328836; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.513 +- 0.515
53,mlp,_scale = True; activation = logistic; alpha = 0.00102623664838; batch_size = auto; beta_1 = 0.990889730404; beta_2 = 0.873016441774; hidden_layer_sizes[0] = 155; learning_rate_init = 0.468791139345; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.385 +- 0.639
54,mlp,_scale = True; activation = tanh; alpha = 0.0060745624063; batch_size = auto; beta_1 = 0.810455090006; beta_2 = 0.86233389184; hidden_layer_sizes[0] = 166; learning_rate_init = 0.506612828834; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.754 +- 0.015
55,mlp,_scale = True; activation = tanh; alpha = 0.00642222331207; batch_size = auto; beta_1 = 0.950661050707; beta_2 = 0.9228862104; hidden_layer_sizes[0] = 232; learning_rate_init = 0.737945109017; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.623 +- 0.382
56,mlp,_scale = True; activation = logistic; alpha = 0.00221486648488; batch_size = auto; hidden_layer_sizes[0] = 229; hidden_layer_sizes[1] = 24; learning_rate = invscaling; learning_rate_init = 0.725149199927; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.618 +- 0.634
57,mlp,_scale = True; activation = logistic; alpha = 0.00490142271385; batch_size = auto; hidden_layer_sizes[0] = 152; hidden_layer_sizes[1] = 258; learning_rate = invscaling; learning_rate_init = 0.450398857861; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.565 +- 0.566
58,gnb,_scale_minmax = True,f1 and cv,0.734 +- 0.174
59,mlp,_scale = True; activation = relu; alpha = 0.00732790324552; batch_size = auto; beta_1 = 0.913017407091; beta_2 = 0.873413950401; hidden_layer_sizes[0] = 198; hidden_layer_sizes[1] = 119; learning_rate_init = 0.299263258228; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.357 +- 0.588
60,mlp,_scale = True; activation = relu; alpha = 0.00437532628446; batch_size = auto; beta_1 = 0.856779201746; beta_2 = 0.905041477573; hidden_layer_sizes[0] = 254; hidden_layer_sizes[1] = 281; learning_rate_init = 0.317421025284; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.514 +- 0.520
61,mlp,_scale = True; activation = tanh; alpha = 0.00808218337356; batch_size = auto; beta_1 = 0.813646861773; beta_2 = 0.926051015685; hidden_layer_sizes[0] = 223; hidden_layer_sizes[1] = 79; learning_rate_init = 0.681626093158; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.645 +- 0.153
62,mlp,_scale = True; activation = tanh; alpha = 0.00275617054662; batch_size = auto; beta_1 = 0.977371192532; beta_2 = 0.950555116359; hidden_layer_sizes[0] = 246; hidden_layer_sizes[1] = 147; learning_rate_init = 0.41924593034; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.697 +- 0.307
63,mlp,_scale = True; activation = identity; alpha = 0.00197176250179; batch_size = auto; hidden_layer_sizes[0] = 120; learning_rate = invscaling; learning_rate_init = 0.785634918376; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.704 +- 0.399
64,mlp,_scale = True; activation = identity; alpha = 0.00180158765636; batch_size = auto; hidden_layer_sizes[0] = 145; learning_rate = invscaling; learning_rate_init = 0.552198889363; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.765 +- 0.300
65,logreg,C = 47093.7014376; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 15.325529229,f1 and cv,0.702 +- 0.278
66,logreg,C = 0.443155342509; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.000101144238412,f1 and cv,0.677 +- 0.489
67,mlp,_scale = True; activation = identity; alpha = 0.00367494681335; batch_size = auto; hidden_layer_sizes[0] = 142; hidden_layer_sizes[1] = 237; hidden_layer_sizes[2] = 158; learning_rate = adaptive; learning_rate_init = 0.311947801595; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.705 +- 0.211
68,mlp,_scale = True; activation = identity; alpha = 0.00010321608489; batch_size = auto; hidden_layer_sizes[0] = 159; hidden_layer_sizes[1] = 75; hidden_layer_sizes[2] = 73; learning_rate = adaptive; learning_rate_init = 0.704449459858; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
69,mlp,_scale = True; activation = logistic; alpha = 0.00658761698968; batch_size = auto; hidden_layer_sizes[0] = 99; hidden_layer_sizes[1] = 152; hidden_layer_sizes[2] = 113; learning_rate = constant; learning_rate_init = 0.658043918401; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.243 +- 0.595
70,mlp,_scale = True; activation = logistic; alpha = 0.00712192156559; batch_size = auto; hidden_layer_sizes[0] = 277; hidden_layer_sizes[1] = 271; hidden_layer_sizes[2] = 158; learning_rate = constant; learning_rate_init = 0.128920390882; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.728 +- 0.043
71,mlp,_scale = True; activation = relu; alpha = 0.00140375540345; batch_size = auto; hidden_layer_sizes[0] = 78; hidden_layer_sizes[1] = 201; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.727 +- 0.364
72,mlp,_scale = True; activation = relu; alpha = 0.00649551585093; batch_size = auto; hidden_layer_sizes[0] = 247; hidden_layer_sizes[1] = 183; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.703 +- 0.339
73,logreg,C = 0.0013761076145; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 1.41262043531,f1 and cv,0.758 +- 0.188
74,logreg,C = 9303.15817441; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 0.000334662940477,f1 and cv,0.552 +- 0.386
75,mlp,_scale = True; activation = relu; alpha = 0.00311675023279; batch_size = auto; hidden_layer_sizes[0] = 202; learning_rate = adaptive; learning_rate_init = 0.504088851907; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.703 +- 0.321
76,mlp,_scale = True; activation = relu; alpha = 0.00494765202385; batch_size = auto; hidden_layer_sizes[0] = 212; learning_rate = adaptive; learning_rate_init = 0.140358550945; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.804 +- 0.225
77,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 18; weights = distance,f1 and cv,0.686 +- 0.187
78,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 3; weights = distance,f1 and cv,0.875 +- 0.255
79,mlp,_scale = True; activation = logistic; alpha = 0.00631435652909; batch_size = auto; hidden_layer_sizes[0] = 87; hidden_layer_sizes[1] = 262; hidden_layer_sizes[2] = 57; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.749 +- 0.203
80,mlp,_scale = True; activation = logistic; alpha = 0.00491522611475; batch_size = auto; hidden_layer_sizes[0] = 243; hidden_layer_sizes[1] = 84; hidden_layer_sizes[2] = 207; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.690 +- 0.318
81,dt,criterion = gini; max_depth = 5; max_features = 0.26928275228; min_samples_leaf = 2; min_samples_split = 3,f1 and cv,0.782 +- 0.341
82,dt,criterion = gini; max_depth = 4; max_features = 0.350580615226; min_samples_leaf = 2; min_samples_split = 3,f1 and cv,0.743 +- 0.086
83,mlp,_scale = True; activation = logistic; alpha = 0.00555540554099; batch_size = auto; hidden_layer_sizes[0] = 268; hidden_layer_sizes[1] = 88; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.845 +- 0.253
84,mlp,_scale = True; activation = logistic; alpha = 0.00830150899829; batch_size = auto; hidden_layer_sizes[0] = 106; hidden_layer_sizes[1] = 254; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.606 +- 0.358
85,knn,_scale = True; algorithm = ball_tree; leaf_size = 47; metric = chebyshev; n_neighbors = 5; weights = distance,f1 and cv,0.679 +- 0.269
86,knn,_scale = True; algorithm = ball_tree; leaf_size = 49; metric = chebyshev; n_neighbors = 8; weights = distance,f1 and cv,0.566 +- 0.376
87,mlp,_scale = True; activation = relu; alpha = 0.00134657693167; batch_size = auto; beta_1 = 0.901446054733; beta_2 = 0.880896299544; hidden_layer_sizes[0] = 191; learning_rate_init = 0.375569538389; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.632 +- 0.525
88,mlp,_scale = True; activation = relu; alpha = 0.000297485001862; batch_size = auto; beta_1 = 0.941478867427; beta_2 = 0.973162866089; hidden_layer_sizes[0] = 69; learning_rate_init = 0.533560098352; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.860 +- 0.217
89,mlp,_scale = True; activation = tanh; alpha = 0.005287015641; batch_size = auto; hidden_layer_sizes[0] = 182; learning_rate = constant; learning_rate_init = 0.163780650802; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.729 +- 0.065
90,mlp,_scale = True; activation = tanh; alpha = 0.00456308654567; batch_size = auto; hidden_layer_sizes[0] = 127; learning_rate = constant; learning_rate_init = 0.135323349646; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.826 +- 0.249
91,gp,kernel = exp_sine_squared; length_scale = 4.85831821276; periodicity = 0,f1 and cv,0.264 +- 0.657
92,gp,kernel = exp_sine_squared; length_scale = 0.135958947829; periodicity = 0,f1 and cv,0.509 +- 0.491
93,mlp,_scale = True; activation = identity; alpha = 0.00327852610934; batch_size = auto; hidden_layer_sizes[0] = 47; hidden_layer_sizes[1] = 186; learning_rate = adaptive; learning_rate_init = 0.572603383057; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.814 +- 0.184
94,mlp,_scale = True; activation = identity; alpha = 0.00459711119933; batch_size = auto; hidden_layer_sizes[0] = 57; hidden_layer_sizes[1] = 244; learning_rate = adaptive; learning_rate_init = 0.183884865397; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.717 +- 0.082
95,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 15; weights = uniform,f1 and cv,0.748 +- 0.302
96,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 14; weights = uniform,f1 and cv,0.781 +- 0.123
97,mlp,_scale = True; activation = identity; alpha = 0.0074516368895; batch_size = auto; hidden_layer_sizes[0] = 260; hidden_layer_sizes[1] = 272; learning_rate = constant; learning_rate_init = 0.814031098014; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.740 +- 0.568
98,mlp,_scale = True; activation = identity; alpha = 0.000714089726547; batch_size = auto; hidden_layer_sizes[0] = 213; hidden_layer_sizes[1] = 198; learning_rate = constant; learning_rate_init = 0.814268876798; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.705 +- 0.160
99,knn,_scale = True; algorithm = kd_tree; leaf_size = 34; metric = minkowski; n_neighbors = 20; p = 2; weights = distance,f1 and cv,0.636 +- 0.695
100,knn,_scale = True; algorithm = kd_tree; leaf_size = 2; metric = minkowski; n_neighbors = 3; p = 2; weights = distance,f1 and cv,0.695 +- 0.320
101,gp,kernel = exp_sine_squared; length_scale = 0.0418500347903; periodicity = 1,f1 and cv,0.518 +- 0.349
102,gp,kernel = exp_sine_squared; length_scale = 3.2608797321; periodicity = 1,f1 and cv,0.636 +- 0.138
103,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = manhattan; n_neighbors = 14; weights = distance,f1 and cv,0.734 +- 0.174
104,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = manhattan; n_neighbors = 8; weights = distance,f1 and cv,0.735 +- 0.329
105,gp,kernel = rbf,f1 and cv,0.000 +- 0.000
106,logreg,C = 8003.09009751; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 158.3290079,f1 and cv,0.000 +- 0.000
107,knn,_scale = True; algorithm = kd_tree; leaf_size = 39; metric = manhattan; n_neighbors = 5; weights = distance,f1 and cv,0.763 +- 0.174
108,knn,_scale = True; algorithm = kd_tree; leaf_size = 19; metric = manhattan; n_neighbors = 1; weights = distance,f1 and cv,0.750 +- 0.390
109,mlp,_scale = True; activation = tanh; alpha = 0.00825577378371; batch_size = auto; beta_1 = 0.985892130227; beta_2 = 0.828672288718; hidden_layer_sizes[0] = 30; hidden_layer_sizes[1] = 97; hidden_layer_sizes[2] = 21; learning_rate_init = 0.681012686376; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.786 +- 0.214
110,mlp,_scale = True; activation = tanh; alpha = 0.00649915984678; batch_size = auto; beta_1 = 0.982349328285; beta_2 = 0.873896270168; hidden_layer_sizes[0] = 180; hidden_layer_sizes[1] = 113; hidden_layer_sizes[2] = 273; learning_rate_init = 0.244111027344; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.647 +- 0.323
111,mlp,_scale = True; activation = tanh; alpha = 0.00629250795; batch_size = auto; hidden_layer_sizes[0] = 153; hidden_layer_sizes[1] = 56; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.906 +- 0.185
112,mlp,_scale = True; activation = tanh; alpha = 0.00814064893138; batch_size = auto; hidden_layer_sizes[0] = 296; hidden_layer_sizes[1] = 246; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.648 +- 0.198
113,mlp,_scale = True; activation = tanh; alpha = 0.0054920617902; batch_size = auto; hidden_layer_sizes[0] = 201; hidden_layer_sizes[1] = 184; learning_rate = adaptive; learning_rate_init = 0.266207557118; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.663 +- 0.331
114,mlp,_scale = True; activation = tanh; alpha = 0.000210532215542; batch_size = auto; hidden_layer_sizes[0] = 84; hidden_layer_sizes[1] = 27; learning_rate = adaptive; learning_rate_init = 0.133819357352; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.758 +- 0.196
115,mlp,_scale = True; activation = logistic; alpha = 0.00749068366409; batch_size = auto; hidden_layer_sizes[0] = 24; learning_rate = adaptive; learning_rate_init = 0.444646403945; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.567 +- 0.267
116,mlp,_scale = True; activation = logistic; alpha = 0.00845358643974; batch_size = auto; hidden_layer_sizes[0] = 142; learning_rate = adaptive; learning_rate_init = 0.925708350382; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.740 +- 0.223
117,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 15; weights = uniform,f1 and cv,0.728 +- 0.191
118,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.660 +- 0.282
119,mlp,_scale = True; activation = identity; alpha = 0.00234311244437; batch_size = auto; hidden_layer_sizes[0] = 145; learning_rate = constant; learning_rate_init = 0.141410353023; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.720 +- 0.160
120,mlp,_scale = True; activation = identity; alpha = 0.00665717297745; batch_size = auto; hidden_layer_sizes[0] = 45; learning_rate = constant; learning_rate_init = 0.25076141269; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.741 +- 0.181
121,mlp,_scale = True; activation = logistic; alpha = 0.00875211514426; batch_size = auto; beta_1 = 0.863778890054; beta_2 = 0.883855308382; hidden_layer_sizes[0] = 209; hidden_layer_sizes[1] = 195; learning_rate_init = 0.0853683569178; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.000 +- 0.000
122,mlp,_scale = True; activation = logistic; alpha = 0.00293197513824; batch_size = auto; hidden_layer_sizes[0] = 43; hidden_layer_sizes[1] = 208; hidden_layer_sizes[2] = 229; learning_rate = adaptive; learning_rate_init = 0.649397583034; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.400 +- 0.653
123,mlp,_scale = True; activation = logistic; alpha = 0.00681985969241; batch_size = auto; hidden_layer_sizes[0] = 14; hidden_layer_sizes[1] = 30; hidden_layer_sizes[2] = 174; learning_rate = adaptive; learning_rate_init = 0.10778253764; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
124,svm,C = 8.16055297671; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 147.068791847; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.747 +- 0.054
125,svm,C = 0.0089089646207; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 253.344779981; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.646 +- 0.050
126,mnb,_scale_minmax = True; alpha = 0.902316081541; class_prior = None; fit_prior = 0,f1 and cv,0.659 +- 0.427
127,mnb,_scale_minmax = True; alpha = 0.710780560312; class_prior = None; fit_prior = 0,f1 and cv,0.694 +- 0.353
128,mlp,_scale = True; activation = tanh; alpha = 0.00480760064499; batch_size = auto; hidden_layer_sizes[0] = 67; learning_rate = adaptive; learning_rate_init = 0.333529348373; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.695 +- 0.480
129,mlp,_scale = True; activation = tanh; alpha = 0.0085398433589; batch_size = auto; hidden_layer_sizes[0] = 252; learning_rate = adaptive; learning_rate_init = 0.531057244459; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.575 +- 0.498
130,svm,C = 0.488485724028; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 808; gamma = 1.48944568797e-05; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.400 +- 0.653
131,svm,C = 12.6587418859; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -239; gamma = 663.160595527; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.694 +- 0.253
132,mlp,_scale = True; activation = identity; alpha = 0.00378946917625; batch_size = auto; hidden_layer_sizes[0] = 248; hidden_layer_sizes[1] = 219; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.718 +- 0.176
133,mlp,_scale = True; activation = identity; alpha = 0.00171384081042; batch_size = auto; hidden_layer_sizes[0] = 194; hidden_layer_sizes[1] = 244; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.677 +- 0.204
134,gp,kernel = matern; nu = 0.5,f1 and cv,0.417 +- 0.230
135,mlp,_scale = True; activation = tanh; alpha = 0.00396164402352; batch_size = auto; hidden_layer_sizes[0] = 253; hidden_layer_sizes[1] = 154; hidden_layer_sizes[2] = 216; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.763 +- 0.524
136,mlp,_scale = True; activation = tanh; alpha = 0.00726596359904; batch_size = auto; hidden_layer_sizes[0] = 200; hidden_layer_sizes[1] = 28; hidden_layer_sizes[2] = 205; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.725 +- 0.274
137,knn,_scale = True; algorithm = ball_tree; leaf_size = 7; metric = chebyshev; n_neighbors = 12; weights = uniform,f1 and cv,0.558 +- 0.281
138,knn,_scale = True; algorithm = ball_tree; leaf_size = 33; metric = chebyshev; n_neighbors = 15; weights = uniform,f1 and cv,0.706 +- 0.178
139,mlp,_scale = True; activation = relu; alpha = 0.00267022655552; batch_size = auto; hidden_layer_sizes[0] = 162; learning_rate = constant; learning_rate_init = 0.329554709582; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.741 +- 0.421
140,mlp,_scale = True; activation = relu; alpha = 0.000120285567481; batch_size = auto; hidden_layer_sizes[0] = 94; learning_rate = constant; learning_rate_init = 0.287889175922; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.773 +- 0.157
141,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 13; p = 1; weights = uniform,f1 and cv,0.789 +- 0.280
142,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 19; p = 2; weights = uniform,f1 and cv,0.708 +- 0.161
143,mlp,_scale = True; activation = tanh; alpha = 0.00364601841439; batch_size = auto; hidden_layer_sizes[0] = 172; hidden_layer_sizes[1] = 88; hidden_layer_sizes[2] = 134; learning_rate = constant; learning_rate_init = 0.930415677006; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.558 +- 0.645
144,mlp,_scale = True; activation = tanh; alpha = 0.000723907193495; batch_size = auto; hidden_layer_sizes[0] = 25; hidden_layer_sizes[1] = 248; hidden_layer_sizes[2] = 290; learning_rate = constant; learning_rate_init = 0.449709456131; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.781 +- 0.285
145,mlp,_scale = True; activation = tanh; alpha = 0.00615973608702; batch_size = auto; hidden_layer_sizes[0] = 229; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.707 +- 0.373
146,mlp,_scale = True; activation = tanh; alpha = 0.00342215452488; batch_size = auto; hidden_layer_sizes[0] = 291; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.788 +- 0.371
147,logreg,C = 33236.2651831; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 45143.8756661,f1 and cv,0.000 +- 0.000
148,mlp,_scale = True; activation = relu; alpha = 0.00733763196925; batch_size = auto; hidden_layer_sizes[0] = 84; hidden_layer_sizes[1] = 193; hidden_layer_sizes[2] = 23; learning_rate = constant; learning_rate_init = 0.149237023614; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.689 +- 0.208
149,mlp,_scale = True; activation = relu; alpha = 0.00777580626777; batch_size = auto; hidden_layer_sizes[0] = 108; hidden_layer_sizes[1] = 205; hidden_layer_sizes[2] = 52; learning_rate = constant; learning_rate_init = 0.529978231905; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.728 +- 0.218
150,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 19; weights = distance,f1 and cv,0.619 +- 0.197
151,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 6; weights = distance,f1 and cv,0.532 +- 0.378
152,mlp,_scale = True; activation = logistic; alpha = 0.000567528746084; batch_size = auto; hidden_layer_sizes[0] = 150; hidden_layer_sizes[1] = 264; learning_rate = constant; learning_rate_init = 0.0846532674358; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.133 +- 0.533
153,mlp,_scale = True; activation = logistic; alpha = 0.00239891080963; batch_size = auto; hidden_layer_sizes[0] = 201; hidden_layer_sizes[1] = 46; learning_rate = constant; learning_rate_init = 0.426161179321; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.422 +- 0.690
154,mlp,_scale = True; activation = tanh; alpha = 0.00827701278597; batch_size = auto; hidden_layer_sizes[0] = 197; hidden_layer_sizes[1] = 97; learning_rate = invscaling; learning_rate_init = 0.977395089155; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.798 +- 0.217
155,mlp,_scale = True; activation = tanh; alpha = 0.00235795231137; batch_size = auto; hidden_layer_sizes[0] = 120; hidden_layer_sizes[1] = 166; learning_rate = invscaling; learning_rate_init = 0.194546202206; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.660 +- 0.338
156,mlp,_scale = True; activation = identity; alpha = 0.00781093580274; batch_size = auto; beta_1 = 0.893500772757; beta_2 = 0.847286576572; hidden_layer_sizes[0] = 14; hidden_layer_sizes[1] = 247; learning_rate_init = 0.758696518557; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.762 +- 0.097
157,mlp,_scale = True; activation = identity; alpha = 0.00567418712325; batch_size = auto; beta_1 = 0.96818040483; beta_2 = 0.97953775169; hidden_layer_sizes[0] = 126; hidden_layer_sizes[1] = 258; learning_rate_init = 0.341003076312; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.533 +- 0.573
158,mlp,_scale = True; activation = relu; alpha = 0.00162868600501; batch_size = auto; hidden_layer_sizes[0] = 144; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.754 +- 0.425
159,mlp,_scale = True; activation = relu; alpha = 0.00229409998765; batch_size = auto; hidden_layer_sizes[0] = 298; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.829 +- 0.264
160,mlp,_scale = True; activation = identity; alpha = 0.00864326826731; batch_size = auto; beta_1 = 0.942795630859; beta_2 = 0.947817974492; hidden_layer_sizes[0] = 237; hidden_layer_sizes[1] = 4; hidden_layer_sizes[2] = 135; learning_rate_init = 0.887629148002; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.733 +- 0.164
161,mlp,_scale = True; activation = identity; alpha = 0.00853544959721; batch_size = auto; beta_1 = 0.910177581959; beta_2 = 0.954639833114; hidden_layer_sizes[0] = 60; hidden_layer_sizes[1] = 167; hidden_layer_sizes[2] = 135; learning_rate_init = 0.248072259148; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.631 +- 0.711
162,mlp,_scale = True; activation = logistic; alpha = 0.000935512363926; batch_size = auto; hidden_layer_sizes[0] = 69; hidden_layer_sizes[1] = 257; hidden_layer_sizes[2] = 173; learning_rate = invscaling; learning_rate_init = 0.643384098013; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.562 +- 0.563
163,mlp,_scale = True; activation = logistic; alpha = 0.00613288968392; batch_size = auto; hidden_layer_sizes[0] = 50; hidden_layer_sizes[1] = 14; hidden_layer_sizes[2] = 259; learning_rate = invscaling; learning_rate_init = 0.886220190632; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.133 +- 0.533
164,mlp,_scale = True; activation = relu; alpha = 0.00458676425967; batch_size = auto; hidden_layer_sizes[0] = 29; hidden_layer_sizes[1] = 85; learning_rate = adaptive; learning_rate_init = 0.387754092947; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.771 +- 0.272
165,mlp,_scale = True; activation = relu; alpha = 0.00334926155067; batch_size = auto; hidden_layer_sizes[0] = 42; hidden_layer_sizes[1] = 200; learning_rate = adaptive; learning_rate_init = 0.540543347995; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.707 +- 0.299
166,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = euclidean; n_neighbors = 20; weights = uniform,f1 and cv,0.646 +- 0.371
167,knn,_scale = True; algorithm = ball_tree; leaf_size = 36; metric = euclidean; n_neighbors = 20; weights = uniform,f1 and cv,0.773 +- 0.170
168,mlp,_scale = True; activation = relu; alpha = 0.00719711014803; batch_size = auto; hidden_layer_sizes[0] = 8; hidden_layer_sizes[1] = 221; hidden_layer_sizes[2] = 194; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.692 +- 0.424
169,mlp,_scale = True; activation = relu; alpha = 0.00887638888759; batch_size = auto; hidden_layer_sizes[0] = 12; hidden_layer_sizes[1] = 299; hidden_layer_sizes[2] = 127; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.650 +- 0.380
170,mlp,_scale = True; activation = tanh; alpha = 0.00614178050714; batch_size = auto; hidden_layer_sizes[0] = 61; hidden_layer_sizes[1] = 225; hidden_layer_sizes[2] = 43; learning_rate = adaptive; learning_rate_init = 0.494382591683; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.714 +- 0.199
171,mlp,_scale = True; activation = tanh; alpha = 0.00738872825514; batch_size = auto; hidden_layer_sizes[0] = 11; hidden_layer_sizes[1] = 145; hidden_layer_sizes[2] = 65; learning_rate = adaptive; learning_rate_init = 0.313803037636; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.838 +- 0.191
172,mlp,_scale = True; activation = relu; alpha = 0.00167916081958; batch_size = auto; hidden_layer_sizes[0] = 120; hidden_layer_sizes[1] = 121; learning_rate = invscaling; learning_rate_init = 0.958818724407; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.667 +- 0.183
173,mlp,_scale = True; activation = relu; alpha = 0.0020100221907; batch_size = auto; hidden_layer_sizes[0] = 84; hidden_layer_sizes[1] = 297; learning_rate = invscaling; learning_rate_init = 0.952122922462; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.659 +- 0.327
174,gp,kernel = matern; nu = 2.5,f1 and cv,0.626 +- 0.144
175,knn,_scale = True; algorithm = kd_tree; leaf_size = 49; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.821 +- 0.158
176,knn,_scale = True; algorithm = kd_tree; leaf_size = 5; metric = manhattan; n_neighbors = 7; weights = uniform,f1 and cv,0.803 +- 0.179
177,mlp,_scale = True; activation = logistic; alpha = 0.000158711821583; batch_size = auto; beta_1 = 0.840424693096; beta_2 = 0.878668041576; hidden_layer_sizes[0] = 4; hidden_layer_sizes[1] = 50; hidden_layer_sizes[2] = 129; learning_rate_init = 0.00585355090471; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.533 +- 0.533
178,mlp,_scale = True; activation = logistic; alpha = 0.00201291230505; batch_size = auto; beta_1 = 0.822720823925; beta_2 = 0.994438957081; hidden_layer_sizes[0] = 106; hidden_layer_sizes[1] = 288; hidden_layer_sizes[2] = 154; learning_rate_init = 0.97642751098; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.276 +- 0.677
179,knn,_scale = True; algorithm = kd_tree; leaf_size = 13; metric = euclidean; n_neighbors = 6; weights = distance,f1 and cv,0.805 +- 0.236
180,knn,_scale = True; algorithm = kd_tree; leaf_size = 25; metric = euclidean; n_neighbors = 15; weights = distance,f1 and cv,0.603 +- 0.371
181,mlp,_scale = True; activation = relu; alpha = 0.00445180469685; batch_size = auto; hidden_layer_sizes[0] = 300; hidden_layer_sizes[1] = 202; hidden_layer_sizes[2] = 109; learning_rate = invscaling; learning_rate_init = 0.737533695192; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.831 +- 0.221
182,mlp,_scale = True; activation = relu; alpha = 0.00221169830469; batch_size = auto; hidden_layer_sizes[0] = 300; hidden_layer_sizes[1] = 82; hidden_layer_sizes[2] = 246; learning_rate = invscaling; learning_rate_init = 0.745125016274; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.691 +- 0.341
183,gp,alpha = 0.939043411847; kernel = rational_quadratic; length_scale = 0.215067015461,f1 and cv,0.607 +- 0.122
184,gp,alpha = 0.674130544672; kernel = rational_quadratic; length_scale = 0.0475666943118,f1 and cv,0.688 +- 0.187
185,mlp,_scale = True; activation = identity; alpha = 0.00644730586978; batch_size = auto; beta_1 = 0.882156870467; beta_2 = 0.802764529928; hidden_layer_sizes[0] = 14; learning_rate_init = 0.931185756048; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.789 +- 0.361
186,mlp,_scale = True; activation = identity; alpha = 0.00582384603658; batch_size = auto; beta_1 = 0.817626145533; beta_2 = 0.868733905202; hidden_layer_sizes[0] = 45; learning_rate_init = 0.424573756977; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.798 +- 0.260
187,knn,_scale = True; algorithm = ball_tree; leaf_size = 7; metric = euclidean; n_neighbors = 16; weights = distance,f1 and cv,0.735 +- 0.402
188,knn,_scale = True; algorithm = ball_tree; leaf_size = 22; metric = euclidean; n_neighbors = 8; weights = distance,f1 and cv,0.849 +- 0.132
189,svm,C = 0.0598810328026; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.849 +- 0.188
190,svm,C = 0.144754612317; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.764 +- 0.238
191,mlp,_scale = True; activation = logistic; alpha = 0.00558989678671; batch_size = auto; beta_1 = 0.819286301002; beta_2 = 0.909992491242; hidden_layer_sizes[0] = 240; hidden_layer_sizes[1] = 223; learning_rate_init = 0.330182353029; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.436 +- 0.717
192,dt,criterion = entropy; max_depth = 7; max_features = 0.163511255284; min_samples_leaf = 2; min_samples_split = 4,f1 and cv,0.567 +- 0.653
193,dt,criterion = entropy; max_depth = 6; max_features = 0.30231712356; min_samples_leaf = 1; min_samples_split = 4,f1 and cv,0.737 +- 0.374
194,knn,_scale = True; algorithm = ball_tree; leaf_size = 34; metric = manhattan; n_neighbors = 2; weights = uniform,f1 and cv,0.709 +- 0.313
195,knn,_scale = True; algorithm = ball_tree; leaf_size = 11; metric = manhattan; n_neighbors = 2; weights = uniform,f1 and cv,0.748 +- 0.149
196,mlp,_scale = True; activation = identity; alpha = 0.00121727411285; batch_size = auto; hidden_layer_sizes[0] = 12; hidden_layer_sizes[1] = 64; hidden_layer_sizes[2] = 209; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.790 +- 0.232
197,mlp,_scale = True; activation = identity; alpha = 0.00557906441868; batch_size = auto; hidden_layer_sizes[0] = 102; hidden_layer_sizes[1] = 297; hidden_layer_sizes[2] = 168; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.710 +- 0.247
198,knn,_scale = True; algorithm = kd_tree; leaf_size = 23; metric = chebyshev; n_neighbors = 8; weights = distance,f1 and cv,0.509 +- 0.833
199,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = chebyshev; n_neighbors = 14; weights = distance,f1 and cv,0.716 +- 0.129
