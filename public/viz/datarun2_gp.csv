trail ID,method,parameters,metrics,performance
0,mlp,_scale = True; activation = logistic; alpha = 0.00799991890745; batch_size = auto; hidden_layer_sizes[0] = 56; hidden_layer_sizes[1] = 24; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.748 +- 0.164
1,mlp,_scale = True; activation = logistic; alpha = 0.00849143103282; batch_size = auto; hidden_layer_sizes[0] = 99; hidden_layer_sizes[1] = 62; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.735 +- 0.184
2,mlp,_scale = True; activation = logistic; alpha = 0.00177045733688; batch_size = auto; hidden_layer_sizes[0] = 55; hidden_layer_sizes[1] = 29; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.691 +- 0.157
3,mlp,_scale = True; activation = logistic; alpha = 0.00723514242738; batch_size = auto; hidden_layer_sizes[0] = 57; hidden_layer_sizes[1] = 21; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.760 +- 0.171
4,mlp,_scale = True; activation = identity; alpha = 0.00547161489348; batch_size = auto; hidden_layer_sizes[0] = 209; learning_rate = invscaling; learning_rate_init = 0.650260689975; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.682 +- 0.105
5,mlp,_scale = True; activation = identity; alpha = 0.00899195208914; batch_size = auto; hidden_layer_sizes[0] = 64; learning_rate = invscaling; learning_rate_init = 0.731561837323; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.609 +- 0.387
6,mlp,_scale = True; activation = identity; alpha = 0.00234238712992; batch_size = auto; hidden_layer_sizes[0] = 209; learning_rate = invscaling; learning_rate_init = 0.465202580375; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.736 +- 0.259
7,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 15; weights = distance,f1 and cv,0.780 +- 0.278
8,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 8; weights = distance,f1 and cv,0.674 +- 0.146
9,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 15; weights = distance,f1 and cv,0.589 +- 0.305
10,mlp,_scale = True; activation = tanh; alpha = 0.00224178522662; batch_size = auto; hidden_layer_sizes[0] = 239; hidden_layer_sizes[1] = 218; learning_rate = invscaling; learning_rate_init = 0.344309618261; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.791 +- 0.079
11,mlp,_scale = True; activation = tanh; alpha = 0.00427765774483; batch_size = auto; hidden_layer_sizes[0] = 246; hidden_layer_sizes[1] = 184; learning_rate = invscaling; learning_rate_init = 0.0273710171825; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.735 +- 0.498
12,mlp,_scale = True; activation = tanh; alpha = 0.00526485272616; batch_size = auto; hidden_layer_sizes[0] = 237; hidden_layer_sizes[1] = 218; learning_rate = invscaling; learning_rate_init = 0.879873731867; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.755 +- 0.121
13,mlp,_scale = True; activation = tanh; alpha = 0.000634821692555; batch_size = auto; hidden_layer_sizes[0] = 149; hidden_layer_sizes[1] = 6; learning_rate = adaptive; learning_rate_init = 0.277926847527; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.785 +- 0.423
14,mlp,_scale = True; activation = tanh; alpha = 0.00660553229005; batch_size = auto; hidden_layer_sizes[0] = 165; hidden_layer_sizes[1] = 112; learning_rate = adaptive; learning_rate_init = 0.867735422342; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.712 +- 0.130
15,mlp,_scale = True; activation = tanh; alpha = 0.00371911388751; batch_size = auto; hidden_layer_sizes[0] = 148; hidden_layer_sizes[1] = 4; learning_rate = adaptive; learning_rate_init = 0.122456112659; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.707 +- 0.166
16,mlp,_scale = True; activation = relu; alpha = 0.00392350082244; batch_size = auto; beta_1 = 0.914223423245; beta_2 = 0.858754257734; hidden_layer_sizes[0] = 237; hidden_layer_sizes[1] = 229; hidden_layer_sizes[2] = 67; learning_rate_init = 0.175696655355; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.594 +- 0.620
17,mlp,_scale = True; activation = relu; alpha = 0.000295211950158; batch_size = auto; beta_1 = 0.917406288989; beta_2 = 0.860898038173; hidden_layer_sizes[0] = 39; hidden_layer_sizes[1] = 287; hidden_layer_sizes[2] = 51; learning_rate_init = 0.559862026703; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.213 +- 0.549
18,gp,alpha = 0.041501904705; kernel = rational_quadratic; length_scale = 14.3432879364,f1 and cv,0.712 +- 0.348
19,gp,alpha = 0.773879362873; kernel = rational_quadratic; length_scale = 0.0330209564233,f1 and cv,0.614 +- 0.267
20,mlp,_scale = True; activation = identity; alpha = 0.00562597823112; batch_size = auto; hidden_layer_sizes[0] = 33; hidden_layer_sizes[1] = 195; hidden_layer_sizes[2] = 98; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.575 +- 0.348
21,mlp,_scale = True; activation = identity; alpha = 0.00806297352457; batch_size = auto; hidden_layer_sizes[0] = 170; hidden_layer_sizes[1] = 114; hidden_layer_sizes[2] = 63; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.673 +- 0.171
22,mlp,_scale = True; activation = logistic; alpha = 0.00160751379346; batch_size = auto; hidden_layer_sizes[0] = 218; hidden_layer_sizes[1] = 27; hidden_layer_sizes[2] = 67; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.694 +- 0.109
23,mlp,_scale = True; activation = logistic; alpha = 0.00837727401381; batch_size = auto; hidden_layer_sizes[0] = 22; hidden_layer_sizes[1] = 245; hidden_layer_sizes[2] = 194; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.797 +- 0.311
24,mlp,_scale = True; activation = logistic; alpha = 0.00879886663304; batch_size = auto; hidden_layer_sizes[0] = 243; hidden_layer_sizes[1] = 221; hidden_layer_sizes[2] = 250; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.766 +- 0.186
25,knn,_scale = True; algorithm = ball_tree; leaf_size = 42; metric = euclidean; n_neighbors = 17; weights = uniform,f1 and cv,0.807 +- 0.284
26,knn,_scale = True; algorithm = ball_tree; leaf_size = 4; metric = euclidean; n_neighbors = 13; weights = uniform,f1 and cv,0.682 +- 0.382
27,mnb,_scale_minmax = True; alpha = 0.822696871672; class_prior = None; fit_prior = 0,f1 and cv,0.780 +- 0.234
28,mnb,_scale_minmax = True; alpha = 0.955370128562; class_prior = None; fit_prior = 0,f1 and cv,0.664 +- 0.437
29,dt,criterion = gini; max_depth = 7; max_features = 0.676782742212; min_samples_leaf = 2; min_samples_split = 2,f1 and cv,0.745 +- 0.277
30,dt,criterion = gini; max_depth = 3; max_features = 0.979277036136; min_samples_leaf = 3; min_samples_split = 2,f1 and cv,0.760 +- 0.348
31,logreg,C = 0.00528614608449; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 7.63521491081,f1 and cv,0.708 +- 0.381
32,logreg,C = 1.87012501354; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 0.038350775541,f1 and cv,0.782 +- 0.149
33,mlp,_scale = True; activation = relu; alpha = 0.00376390194408; batch_size = auto; hidden_layer_sizes[0] = 94; learning_rate = invscaling; learning_rate_init = 0.380382485648; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.719 +- 0.155
34,mlp,_scale = True; activation = relu; alpha = 0.00206755077975; batch_size = auto; hidden_layer_sizes[0] = 70; learning_rate = invscaling; learning_rate_init = 0.4049758173; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.793 +- 0.158
35,mlp,_scale = True; activation = relu; alpha = 0.00664538442617; batch_size = auto; hidden_layer_sizes[0] = 274; hidden_layer_sizes[1] = 118; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.809 +- 0.112
36,mlp,_scale = True; activation = relu; alpha = 0.00718100709273; batch_size = auto; hidden_layer_sizes[0] = 41; hidden_layer_sizes[1] = 165; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.742 +- 0.260
37,mlp,_scale = True; activation = identity; alpha = 0.00871607173955; batch_size = auto; hidden_layer_sizes[0] = 6; hidden_layer_sizes[1] = 290; hidden_layer_sizes[2] = 293; learning_rate = adaptive; learning_rate_init = 0.942419045492; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
38,mlp,_scale = True; activation = relu; alpha = 0.00833505964486; batch_size = auto; hidden_layer_sizes[0] = 9; hidden_layer_sizes[1] = 122; learning_rate = adaptive; learning_rate_init = 0.784859303991; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.638 +- 0.339
39,mlp,_scale = True; activation = relu; alpha = 0.006648665153; batch_size = auto; hidden_layer_sizes[0] = 180; hidden_layer_sizes[1] = 15; learning_rate = adaptive; learning_rate_init = 0.562082568671; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.658 +- 0.221
40,mlp,_scale = True; activation = identity; alpha = 0.00792512283525; batch_size = auto; hidden_layer_sizes[0] = 25; hidden_layer_sizes[1] = 292; hidden_layer_sizes[2] = 22; learning_rate = constant; learning_rate_init = 0.788690042474; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.367 +- 0.442
41,mlp,_scale = True; activation = identity; alpha = 0.00688422258512; batch_size = auto; hidden_layer_sizes[0] = 288; hidden_layer_sizes[1] = 260; hidden_layer_sizes[2] = 238; learning_rate = constant; learning_rate_init = 0.77218536964; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.360 +- 0.406
42,knn,_scale = True; algorithm = kd_tree; leaf_size = 27; metric = chebyshev; n_neighbors = 16; weights = uniform,f1 and cv,0.679 +- 0.154
43,knn,_scale = True; algorithm = kd_tree; leaf_size = 33; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.705 +- 0.228
44,mlp,_scale = True; activation = relu; alpha = 0.00829106098594; batch_size = auto; hidden_layer_sizes[0] = 37; hidden_layer_sizes[1] = 118; learning_rate = constant; learning_rate_init = 0.455241704563; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.716 +- 0.415
45,mlp,_scale = True; activation = relu; alpha = 0.00233838412282; batch_size = auto; hidden_layer_sizes[0] = 12; hidden_layer_sizes[1] = 24; learning_rate = constant; learning_rate_init = 0.58136369656; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.655 +- 0.119
46,gp,kernel = exp_sine_squared; length_scale = 0.286115700759; periodicity = 1,f1 and cv,0.493 +- 0.441
47,gp,kernel = exp_sine_squared; length_scale = 0.0757682044306; periodicity = 1,f1 and cv,0.479 +- 0.506
48,mlp,_scale = True; activation = identity; alpha = 0.00811391645532; batch_size = auto; beta_1 = 0.970126220631; beta_2 = 0.995982659475; hidden_layer_sizes[0] = 277; learning_rate_init = 0.683438765367; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.847 +- 0.059
49,mlp,_scale = True; activation = identity; alpha = 0.00659411144259; batch_size = auto; beta_1 = 0.905504262224; beta_2 = 0.821045183661; hidden_layer_sizes[0] = 85; learning_rate_init = 0.504346221191; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.713 +- 0.466
50,logreg,C = 0.197368621397; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 64.4595613216,f1 and cv,0.000 +- 0.000
51,mlp,_scale = True; activation = relu; alpha = 0.00153881672492; batch_size = auto; hidden_layer_sizes[0] = 115; hidden_layer_sizes[1] = 227; hidden_layer_sizes[2] = 104; learning_rate = invscaling; learning_rate_init = 0.0393098031832; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.806 +- 0.533
52,mlp,_scale = True; activation = relu; alpha = 0.00816849554577; batch_size = auto; hidden_layer_sizes[0] = 250; hidden_layer_sizes[1] = 85; hidden_layer_sizes[2] = 128; learning_rate = invscaling; learning_rate_init = 0.615046869676; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.674 +- 0.293
53,mlp,_scale = True; activation = tanh; alpha = 0.00360979808843; batch_size = auto; beta_1 = 0.855599296801; beta_2 = 0.856429648316; hidden_layer_sizes[0] = 179; hidden_layer_sizes[1] = 53; learning_rate_init = 0.929951980019; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.577 +- 0.292
54,mlp,_scale = True; activation = tanh; alpha = 0.0058900276749; batch_size = auto; beta_1 = 0.89139590446; beta_2 = 0.844801556636; hidden_layer_sizes[0] = 170; hidden_layer_sizes[1] = 150; learning_rate_init = 0.327819358042; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.569 +- 0.418
55,mlp,_scale = True; activation = logistic; alpha = 0.00408815617237; batch_size = auto; hidden_layer_sizes[0] = 149; hidden_layer_sizes[1] = 9; learning_rate = constant; learning_rate_init = 0.609590912397; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.831 +- 0.221
56,mlp,_scale = True; activation = logistic; alpha = 0.000300185642587; batch_size = auto; hidden_layer_sizes[0] = 91; hidden_layer_sizes[1] = 129; learning_rate = constant; learning_rate_init = 0.709215361944; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.379 +- 0.621
57,mlp,_scale = True; activation = relu; alpha = 0.0030438878624; batch_size = auto; hidden_layer_sizes[0] = 81; learning_rate = constant; learning_rate_init = 0.905282464084; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.673 +- 0.232
58,mlp,_scale = True; activation = relu; alpha = 0.00146693288878; batch_size = auto; hidden_layer_sizes[0] = 189; learning_rate = constant; learning_rate_init = 0.898892816545; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.841 +- 0.290
59,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 10; p = 1; weights = uniform,f1 and cv,0.650 +- 0.466
60,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 2; p = 2; weights = uniform,f1 and cv,0.826 +- 0.225
61,knn,_scale = True; algorithm = kd_tree; leaf_size = 10; metric = euclidean; n_neighbors = 6; weights = distance,f1 and cv,0.776 +- 0.187
62,knn,_scale = True; algorithm = kd_tree; leaf_size = 19; metric = euclidean; n_neighbors = 14; weights = distance,f1 and cv,0.733 +- 0.163
63,knn,_scale = True; algorithm = kd_tree; leaf_size = 33; metric = manhattan; n_neighbors = 2; weights = uniform,f1 and cv,0.543 +- 0.732
64,knn,_scale = True; algorithm = kd_tree; leaf_size = 9; metric = manhattan; n_neighbors = 3; weights = uniform,f1 and cv,0.662 +- 0.160
65,logreg,C = 1.44037909643e-05; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 387.70744433,f1 and cv,0.000 +- 0.000
66,mlp,_scale = True; activation = identity; alpha = 0.00398238250451; batch_size = auto; hidden_layer_sizes[0] = 46; learning_rate = constant; learning_rate_init = 0.047364176926; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.730 +- 0.234
67,mlp,_scale = True; activation = identity; alpha = 0.00463099649498; batch_size = auto; hidden_layer_sizes[0] = 107; learning_rate = constant; learning_rate_init = 0.733119060066; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.778 +- 0.281
68,mlp,_scale = True; activation = tanh; alpha = 0.00562018390673; batch_size = auto; hidden_layer_sizes[0] = 87; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.793 +- 0.224
69,mlp,_scale = True; activation = tanh; alpha = 0.00696111712754; batch_size = auto; hidden_layer_sizes[0] = 279; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.594 +- 0.362
70,gp,kernel = constant,f1 and cv,0.707 +- 0.042
71,knn,_scale = True; algorithm = kd_tree; leaf_size = 34; metric = minkowski; n_neighbors = 16; p = 2; weights = distance,f1 and cv,0.715 +- 0.140
72,knn,_scale = True; algorithm = kd_tree; leaf_size = 50; metric = minkowski; n_neighbors = 19; p = 2; weights = distance,f1 and cv,0.688 +- 0.275
73,mlp,_scale = True; activation = relu; alpha = 0.000282349269762; batch_size = auto; beta_1 = 0.852197982746; beta_2 = 0.983418833054; hidden_layer_sizes[0] = 62; learning_rate_init = 0.588627297032; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.819 +- 0.097
74,mlp,_scale = True; activation = relu; alpha = 0.00515144712438; batch_size = auto; beta_1 = 0.994226324379; beta_2 = 0.815806660936; hidden_layer_sizes[0] = 199; learning_rate_init = 0.812129907734; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.661 +- 0.325
75,logreg,C = 2725.12959188; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 5377.22663938,f1 and cv,0.000 +- 0.000
76,mlp,_scale = True; activation = identity; alpha = 0.0062318539897; batch_size = auto; hidden_layer_sizes[0] = 54; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.631 +- 0.319
77,mlp,_scale = True; activation = identity; alpha = 0.00872090939651; batch_size = auto; hidden_layer_sizes[0] = 219; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.623 +- 0.349
78,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = euclidean; n_neighbors = 17; weights = distance,f1 and cv,0.663 +- 0.380
79,knn,_scale = True; algorithm = ball_tree; leaf_size = 45; metric = euclidean; n_neighbors = 10; weights = distance,f1 and cv,0.744 +- 0.193
80,knn,_scale = True; algorithm = kd_tree; leaf_size = 34; metric = manhattan; n_neighbors = 1; weights = distance,f1 and cv,0.498 +- 0.526
81,knn,_scale = True; algorithm = kd_tree; leaf_size = 30; metric = manhattan; n_neighbors = 7; weights = distance,f1 and cv,0.704 +- 0.227
82,gp,kernel = matern; nu = 0.5,f1 and cv,0.514 +- 0.520
83,mlp,_scale = True; activation = tanh; alpha = 0.00883367578485; batch_size = auto; hidden_layer_sizes[0] = 36; hidden_layer_sizes[1] = 177; hidden_layer_sizes[2] = 36; learning_rate = adaptive; learning_rate_init = 0.558670955025; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.785 +- 0.126
84,mlp,_scale = True; activation = tanh; alpha = 0.00583093659719; batch_size = auto; hidden_layer_sizes[0] = 242; hidden_layer_sizes[1] = 206; hidden_layer_sizes[2] = 129; learning_rate = adaptive; learning_rate_init = 0.273588290809; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.595 +- 0.234
85,mlp,_scale = True; activation = identity; alpha = 0.00147185389566; batch_size = auto; hidden_layer_sizes[0] = 15; hidden_layer_sizes[1] = 162; learning_rate = invscaling; learning_rate_init = 0.00589667281794; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.634 +- 0.196
86,mlp,_scale = True; activation = identity; alpha = 0.00146904657447; batch_size = auto; hidden_layer_sizes[0] = 152; hidden_layer_sizes[1] = 39; learning_rate = invscaling; learning_rate_init = 0.501611525757; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.735 +- 0.218
87,knn,_scale = True; algorithm = ball_tree; leaf_size = 18; metric = manhattan; n_neighbors = 16; weights = distance,f1 and cv,0.833 +- 0.230
88,knn,_scale = True; algorithm = ball_tree; leaf_size = 38; metric = manhattan; n_neighbors = 3; weights = distance,f1 and cv,0.719 +- 0.361
89,mlp,_scale = True; activation = relu; alpha = 0.00321551107466; batch_size = auto; beta_1 = 0.806148066701; beta_2 = 0.907200674379; hidden_layer_sizes[0] = 45; hidden_layer_sizes[1] = 195; learning_rate_init = 0.489362033585; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.753 +- 0.316
90,mlp,_scale = True; activation = relu; alpha = 0.00200767805409; batch_size = auto; beta_1 = 0.878324882969; beta_2 = 0.985934115428; hidden_layer_sizes[0] = 266; hidden_layer_sizes[1] = 196; learning_rate_init = 0.109332747323; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.260 +- 0.644
91,mlp,_scale = True; activation = identity; alpha = 0.000627780706672; batch_size = auto; beta_1 = 0.859269935731; beta_2 = 0.857146993073; hidden_layer_sizes[0] = 235; hidden_layer_sizes[1] = 202; hidden_layer_sizes[2] = 173; learning_rate_init = 0.0132779420352; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.735 +- 0.387
92,mlp,_scale = True; activation = identity; alpha = 0.00664294783307; batch_size = auto; beta_1 = 0.895240629973; beta_2 = 0.96121714919; hidden_layer_sizes[0] = 199; hidden_layer_sizes[1] = 2; hidden_layer_sizes[2] = 166; learning_rate_init = 0.184764822357; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.742 +- 0.197
93,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 11; weights = distance,f1 and cv,0.811 +- 0.237
94,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 16; weights = distance,f1 and cv,0.821 +- 0.197
95,mlp,_scale = True; activation = tanh; alpha = 0.00447020989052; batch_size = auto; hidden_layer_sizes[0] = 53; learning_rate = invscaling; learning_rate_init = 0.83218879304; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.843 +- 0.238
96,mlp,_scale = True; activation = tanh; alpha = 0.00534383889414; batch_size = auto; hidden_layer_sizes[0] = 130; learning_rate = invscaling; learning_rate_init = 0.317531602371; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.783 +- 0.405
97,knn,_scale = True; algorithm = ball_tree; leaf_size = 13; metric = manhattan; n_neighbors = 11; weights = uniform,f1 and cv,0.765 +- 0.164
98,knn,_scale = True; algorithm = ball_tree; leaf_size = 13; metric = manhattan; n_neighbors = 17; weights = uniform,f1 and cv,0.713 +- 0.498
99,mlp,_scale = True; activation = logistic; alpha = 0.00647870532925; batch_size = auto; beta_1 = 0.899214542024; beta_2 = 0.953020327964; hidden_layer_sizes[0] = 150; hidden_layer_sizes[1] = 273; hidden_layer_sizes[2] = 24; learning_rate_init = 0.513705713727; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.133 +- 0.533
100,mlp,_scale = True; activation = logistic; alpha = 0.00504175802063; batch_size = auto; beta_1 = 0.965923313126; beta_2 = 0.870884989507; hidden_layer_sizes[0] = 169; hidden_layer_sizes[1] = 269; hidden_layer_sizes[2] = 164; learning_rate_init = 0.671616929214; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.565 +- 0.566
101,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 19; weights = uniform,f1 and cv,0.769 +- 0.298
102,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 4; weights = uniform,f1 and cv,0.641 +- 0.468
103,mlp,_scale = True; activation = logistic; alpha = 0.00535635609759; batch_size = auto; hidden_layer_sizes[0] = 214; learning_rate = constant; learning_rate_init = 0.476065873624; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.145 +- 0.582
104,mlp,_scale = True; activation = logistic; alpha = 0.00155844793069; batch_size = auto; hidden_layer_sizes[0] = 147; learning_rate = constant; learning_rate_init = 0.515921525931; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.506 +- 0.595
105,mlp,_scale = True; activation = tanh; alpha = 0.00657916092724; batch_size = auto; hidden_layer_sizes[0] = 172; hidden_layer_sizes[1] = 78; learning_rate = constant; learning_rate_init = 0.84120659402; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.713 +- 0.307
106,mlp,_scale = True; activation = tanh; alpha = 0.00631981104713; batch_size = auto; hidden_layer_sizes[0] = 278; hidden_layer_sizes[1] = 113; learning_rate = constant; learning_rate_init = 0.59761438975; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.732 +- 0.529
107,gp,kernel = exp_sine_squared; length_scale = 10.4281777388; periodicity = 0,f1 and cv,0.668 +- 0.239
108,gp,kernel = exp_sine_squared; length_scale = 0.0124348843377; periodicity = 0,f1 and cv,0.324 +- 0.367
109,mlp,_scale = True; activation = tanh; alpha = 0.0071096109221; batch_size = auto; hidden_layer_sizes[0] = 239; hidden_layer_sizes[1] = 179; hidden_layer_sizes[2] = 50; learning_rate = invscaling; learning_rate_init = 0.851048113402; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.722 +- 0.102
110,mlp,_scale = True; activation = tanh; alpha = 0.00624666516271; batch_size = auto; hidden_layer_sizes[0] = 84; hidden_layer_sizes[1] = 289; hidden_layer_sizes[2] = 188; learning_rate = invscaling; learning_rate_init = 0.22508895672; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.707 +- 0.331
111,mlp,_scale = True; activation = logistic; alpha = 0.00545160793444; batch_size = auto; beta_1 = 0.921522650053; beta_2 = 0.885952281926; hidden_layer_sizes[0] = 97; hidden_layer_sizes[1] = 293; learning_rate_init = 0.699397950919; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.410 +- 0.670
112,mlp,_scale = True; activation = logistic; alpha = 0.00773926142465; batch_size = auto; beta_1 = 0.962469816726; beta_2 = 0.857047078236; hidden_layer_sizes[0] = 128; hidden_layer_sizes[1] = 16; learning_rate_init = 0.48692840029; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.417 +- 0.683
113,svm,C = 3.41895813938e-05; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.000 +- 0.000
114,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 15; weights = uniform,f1 and cv,0.737 +- 0.252
115,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 3; weights = uniform,f1 and cv,0.740 +- 0.163
116,mlp,_scale = True; activation = logistic; alpha = 0.00634399261369; batch_size = auto; hidden_layer_sizes[0] = 154; hidden_layer_sizes[1] = 222; hidden_layer_sizes[2] = 251; learning_rate = adaptive; learning_rate_init = 0.650390099442; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.440 +- 0.719
117,mlp,_scale = True; activation = logistic; alpha = 0.0076146680887; batch_size = auto; hidden_layer_sizes[0] = 149; hidden_layer_sizes[1] = 12; hidden_layer_sizes[2] = 255; learning_rate = adaptive; learning_rate_init = 0.404560346859; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.267 +- 0.653
118,svm,C = 0.000620649616089; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 31.6556705129; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.400 +- 0.653
119,svm,C = 0.0022628323725; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 0.105226970249; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.133 +- 0.533
120,mlp,_scale = True; activation = relu; alpha = 0.00569511782952; batch_size = auto; hidden_layer_sizes[0] = 4; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.701 +- 0.148
121,mlp,_scale = True; activation = relu; alpha = 0.00341068824745; batch_size = auto; hidden_layer_sizes[0] = 68; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.715 +- 0.249
122,mlp,_scale = True; activation = logistic; alpha = 0.00109553986077; batch_size = auto; hidden_layer_sizes[0] = 18; learning_rate = invscaling; learning_rate_init = 0.16996237031; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.648 +- 0.076
123,mlp,_scale = True; activation = logistic; alpha = 0.00410451928098; batch_size = auto; hidden_layer_sizes[0] = 267; learning_rate = invscaling; learning_rate_init = 0.497287105842; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.787 +- 0.167
124,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 15; weights = distance,f1 and cv,0.702 +- 0.269
125,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 14; weights = distance,f1 and cv,0.682 +- 0.139
126,logreg,C = 0.000214886983356; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.0606697682009,f1 and cv,0.743 +- 0.086
127,logreg,C = 0.0149215712074; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.013252790367,f1 and cv,0.772 +- 0.200
128,mlp,_scale = True; activation = logistic; alpha = 0.00674379437133; batch_size = auto; hidden_layer_sizes[0] = 234; learning_rate = adaptive; learning_rate_init = 0.315733576239; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.256 +- 0.629
129,mlp,_scale = True; activation = logistic; alpha = 0.00225251596382; batch_size = auto; hidden_layer_sizes[0] = 296; learning_rate = adaptive; learning_rate_init = 0.117927780645; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.400 +- 0.653
130,mlp,_scale = True; activation = tanh; alpha = 0.00250989500273; batch_size = auto; hidden_layer_sizes[0] = 261; hidden_layer_sizes[1] = 29; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.765 +- 0.164
131,mlp,_scale = True; activation = tanh; alpha = 0.00717527438859; batch_size = auto; hidden_layer_sizes[0] = 281; hidden_layer_sizes[1] = 21; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.626 +- 0.161
132,mlp,_scale = True; activation = relu; alpha = 0.00627663522928; batch_size = auto; hidden_layer_sizes[0] = 7; hidden_layer_sizes[1] = 57; hidden_layer_sizes[2] = 287; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.737 +- 0.290
133,mlp,_scale = True; activation = relu; alpha = 0.00877694108375; batch_size = auto; hidden_layer_sizes[0] = 188; hidden_layer_sizes[1] = 285; hidden_layer_sizes[2] = 287; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.719 +- 0.477
134,mlp,_scale = True; activation = logistic; alpha = 0.00573644572307; batch_size = auto; hidden_layer_sizes[0] = 263; hidden_layer_sizes[1] = 108; learning_rate = invscaling; learning_rate_init = 0.409766285581; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.240 +- 0.640
135,mlp,_scale = True; activation = logistic; alpha = 0.000438855779034; batch_size = auto; hidden_layer_sizes[0] = 120; hidden_layer_sizes[1] = 262; learning_rate = invscaling; learning_rate_init = 0.595116141461; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.246 +- 0.603
136,mlp,_scale = True; activation = identity; alpha = 0.00498270430181; batch_size = auto; hidden_layer_sizes[0] = 41; hidden_layer_sizes[1] = 145; learning_rate = adaptive; learning_rate_init = 0.258447206553; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.722 +- 0.491
137,mlp,_scale = True; activation = identity; alpha = 0.00843062651055; batch_size = auto; hidden_layer_sizes[0] = 285; hidden_layer_sizes[1] = 250; learning_rate = adaptive; learning_rate_init = 0.200867030817; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.665 +- 0.248
138,mlp,_scale = True; activation = tanh; alpha = 0.00388333311812; batch_size = auto; beta_1 = 0.871947033336; beta_2 = 0.897936169998; hidden_layer_sizes[0] = 78; hidden_layer_sizes[1] = 184; hidden_layer_sizes[2] = 241; learning_rate_init = 0.339093791529; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.394 +- 0.370
139,mlp,_scale = True; activation = tanh; alpha = 0.00254041083504; batch_size = auto; beta_1 = 0.890001067675; beta_2 = 0.995239587889; hidden_layer_sizes[0] = 134; hidden_layer_sizes[1] = 138; hidden_layer_sizes[2] = 298; learning_rate_init = 0.6329508392; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.720 +- 0.249
140,logreg,C = 0.000169227404116; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 4.40641336764e-05,f1 and cv,0.679 +- 0.189
141,logreg,C = 8145.17905037; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 1.09895176679,f1 and cv,0.805 +- 0.245
142,mlp,_scale = True; activation = tanh; alpha = 0.00254330722049; batch_size = auto; hidden_layer_sizes[0] = 136; learning_rate = constant; learning_rate_init = 0.917409557426; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.894 +- 0.194
143,mlp,_scale = True; activation = tanh; alpha = 0.00258248944698; batch_size = auto; hidden_layer_sizes[0] = 277; learning_rate = constant; learning_rate_init = 0.0852553336674; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.776 +- 0.231
144,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = chebyshev; n_neighbors = 6; weights = distance,f1 and cv,0.741 +- 0.123
145,knn,_scale = True; algorithm = kd_tree; leaf_size = 7; metric = chebyshev; n_neighbors = 12; weights = distance,f1 and cv,0.715 +- 0.189
146,logreg,C = 5936.16635027; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 0.000765762014002,f1 and cv,0.714 +- 0.486
147,logreg,C = 106.176591673; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 634.086502893,f1 and cv,0.000 +- 0.000
148,knn,_scale = True; algorithm = ball_tree; leaf_size = 36; metric = minkowski; n_neighbors = 19; p = 2; weights = distance,f1 and cv,0.736 +- 0.138
149,knn,_scale = True; algorithm = ball_tree; leaf_size = 27; metric = minkowski; n_neighbors = 17; p = 2; weights = distance,f1 and cv,0.785 +- 0.149
150,mlp,_scale = True; activation = tanh; alpha = 0.00128966913907; batch_size = auto; hidden_layer_sizes[0] = 156; learning_rate = adaptive; learning_rate_init = 0.393032014951; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.838 +- 0.191
151,mlp,_scale = True; activation = tanh; alpha = 0.00846265747264; batch_size = auto; hidden_layer_sizes[0] = 137; learning_rate = adaptive; learning_rate_init = 0.937994496757; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.648 +- 0.198
152,knn,_scale = True; algorithm = kd_tree; leaf_size = 48; metric = euclidean; n_neighbors = 3; weights = uniform,f1 and cv,0.761 +- 0.347
153,knn,_scale = True; algorithm = kd_tree; leaf_size = 11; metric = euclidean; n_neighbors = 4; weights = uniform,f1 and cv,0.646 +- 0.487
154,svm,C = 0.00967371320032; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.699 +- 0.361
155,knn,_scale = True; algorithm = ball_tree; leaf_size = 3; metric = minkowski; n_neighbors = 3; p = 2; weights = uniform,f1 and cv,0.620 +- 0.388
156,knn,_scale = True; algorithm = ball_tree; leaf_size = 3; metric = minkowski; n_neighbors = 10; p = 2; weights = uniform,f1 and cv,0.693 +- 0.136
157,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 20; p = 3; weights = distance,f1 and cv,0.749 +- 0.297
158,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 10; p = 1; weights = distance,f1 and cv,0.686 +- 0.187
159,svm,C = 3.08767056789e-05; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -500; gamma = 0.000157995812159; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.000 +- 0.000
160,gp,kernel = rbf,f1 and cv,0.160 +- 0.392
161,mlp,_scale = True; activation = identity; alpha = 0.00409914752862; batch_size = auto; hidden_layer_sizes[0] = 10; hidden_layer_sizes[1] = 124; hidden_layer_sizes[2] = 198; learning_rate = adaptive; learning_rate_init = 0.803910784878; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
162,mlp,_scale = True; activation = relu; alpha = 0.000722975852489; batch_size = auto; hidden_layer_sizes[0] = 18; learning_rate = adaptive; learning_rate_init = 0.0589195024231; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.881 +- 0.162
163,mlp,_scale = True; activation = relu; alpha = 0.00276069690004; batch_size = auto; hidden_layer_sizes[0] = 98; learning_rate = adaptive; learning_rate_init = 0.582401488601; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.682 +- 0.486
164,mlp,_scale = True; activation = identity; alpha = 0.00290322408132; batch_size = auto; hidden_layer_sizes[0] = 145; hidden_layer_sizes[1] = 56; learning_rate = constant; learning_rate_init = 0.630712740026; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.634 +- 0.678
165,mlp,_scale = True; activation = identity; alpha = 0.0059401822615; batch_size = auto; hidden_layer_sizes[0] = 242; hidden_layer_sizes[1] = 69; learning_rate = constant; learning_rate_init = 0.783875604546; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.414 +- 0.524
166,mlp,_scale = True; activation = logistic; alpha = 0.00734691511846; batch_size = auto; beta_1 = 0.979837055634; beta_2 = 0.855015251651; hidden_layer_sizes[0] = 167; learning_rate_init = 0.0168683883515; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.747 +- 0.236
167,mlp,_scale = True; activation = logistic; alpha = 0.00183632302307; batch_size = auto; beta_1 = 0.906403478475; beta_2 = 0.829474115993; hidden_layer_sizes[0] = 53; learning_rate_init = 0.345052614046; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.571 +- 0.628
168,rf,criterion = gini; max_depth = 9; max_features = 0.804958345337; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.813 +- 0.389
169,rf,criterion = gini; max_depth = 8; max_features = 0.307667280453; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.848 +- 0.111
170,mlp,_scale = True; activation = relu; alpha = 0.0076573246351; batch_size = auto; hidden_layer_sizes[0] = 73; hidden_layer_sizes[1] = 151; hidden_layer_sizes[2] = 64; learning_rate = constant; learning_rate_init = 0.0473321470211; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.681 +- 0.295
171,mlp,_scale = True; activation = relu; alpha = 0.000685877164814; batch_size = auto; hidden_layer_sizes[0] = 200; hidden_layer_sizes[1] = 273; hidden_layer_sizes[2] = 93; learning_rate = constant; learning_rate_init = 0.779631789596; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.709 +- 0.213
172,svm,C = 227.602880751; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 334; degree = 5; gamma = 0.000267654535605; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.567 +- 0.383
173,svm,C = 7.42631608244; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 953; degree = 3; gamma = 114.230318384; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.831 +- 0.336
174,mlp,_scale = True; activation = logistic; alpha = 0.00456440558355; batch_size = auto; hidden_layer_sizes[0] = 56; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.754 +- 0.107
175,mlp,_scale = True; activation = logistic; alpha = 0.00349695731538; batch_size = auto; hidden_layer_sizes[0] = 299; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.718 +- 0.289
176,mlp,_scale = True; activation = identity; alpha = 0.00645683821149; batch_size = auto; hidden_layer_sizes[0] = 179; learning_rate = adaptive; learning_rate_init = 0.21123025271; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.648 +- 0.479
177,mlp,_scale = True; activation = identity; alpha = 0.00219027581371; batch_size = auto; hidden_layer_sizes[0] = 127; learning_rate = adaptive; learning_rate_init = 0.811623805271; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.642 +- 0.248
178,mlp,_scale = True; activation = logistic; alpha = 0.000441180339435; batch_size = auto; hidden_layer_sizes[0] = 281; hidden_layer_sizes[1] = 294; hidden_layer_sizes[2] = 147; learning_rate = constant; learning_rate_init = 0.937291815316; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.533 +- 0.533
179,mlp,_scale = True; activation = logistic; alpha = 0.000843572763542; batch_size = auto; hidden_layer_sizes[0] = 296; hidden_layer_sizes[1] = 169; hidden_layer_sizes[2] = 6; learning_rate = constant; learning_rate_init = 0.596167630544; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.390 +- 0.505
180,mlp,_scale = True; activation = relu; alpha = 0.00198848567947; batch_size = auto; hidden_layer_sizes[0] = 249; hidden_layer_sizes[1] = 238; hidden_layer_sizes[2] = 194; learning_rate = adaptive; learning_rate_init = 0.905428347836; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.835 +- 0.144
181,mlp,_scale = True; activation = relu; alpha = 0.00633666049544; batch_size = auto; hidden_layer_sizes[0] = 264; hidden_layer_sizes[1] = 85; hidden_layer_sizes[2] = 254; learning_rate = adaptive; learning_rate_init = 0.645189174426; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.753 +- 0.305
182,mlp,_scale = True; activation = tanh; alpha = 0.00264250357265; batch_size = auto; beta_1 = 0.888232994177; beta_2 = 0.93918716222; hidden_layer_sizes[0] = 252; learning_rate_init = 0.633018848284; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.766 +- 0.186
183,mlp,_scale = True; activation = tanh; alpha = 0.00352913577746; batch_size = auto; beta_1 = 0.963429454334; beta_2 = 0.815363692365; hidden_layer_sizes[0] = 264; learning_rate_init = 0.7703991828; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.755 +- 0.329
184,mlp,_scale = True; activation = logistic; alpha = 0.00559135751197; batch_size = auto; hidden_layer_sizes[0] = 64; hidden_layer_sizes[1] = 200; learning_rate = adaptive; learning_rate_init = 0.984715966475; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.279 +- 0.684
185,mlp,_scale = True; activation = logistic; alpha = 0.00602061069601; batch_size = auto; hidden_layer_sizes[0] = 74; hidden_layer_sizes[1] = 52; learning_rate = adaptive; learning_rate_init = 0.438185966665; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.267 +- 0.653
186,mlp,_scale = True; activation = tanh; alpha = 0.00473516959304; batch_size = auto; hidden_layer_sizes[0] = 185; hidden_layer_sizes[1] = 23; hidden_layer_sizes[2] = 298; learning_rate = constant; learning_rate_init = 0.345744308056; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.770 +- 0.200
187,mlp,_scale = True; activation = tanh; alpha = 0.00449996604742; batch_size = auto; hidden_layer_sizes[0] = 49; hidden_layer_sizes[1] = 160; hidden_layer_sizes[2] = 255; learning_rate = constant; learning_rate_init = 0.546664881572; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.669 +- 0.398
188,gp,kernel = matern; nu = 1.5,f1 and cv,0.474 +- 0.350
189,dt,criterion = entropy; max_depth = 2; max_features = 0.816003602121; min_samples_leaf = 2; min_samples_split = 2,f1 and cv,0.702 +- 0.228
190,dt,criterion = entropy; max_depth = 4; max_features = 0.175003521757; min_samples_leaf = 2; min_samples_split = 3,f1 and cv,0.631 +- 0.393
191,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = minkowski; n_neighbors = 6; p = 3; weights = uniform,f1 and cv,0.755 +- 0.286
192,knn,_scale = True; algorithm = kd_tree; leaf_size = 20; metric = minkowski; n_neighbors = 14; p = 3; weights = uniform,f1 and cv,0.775 +- 0.227
193,mlp,_scale = True; activation = identity; alpha = 0.00784529159537; batch_size = auto; hidden_layer_sizes[0] = 252; hidden_layer_sizes[1] = 130; hidden_layer_sizes[2] = 46; learning_rate = invscaling; learning_rate_init = 0.629852682622; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.663 +- 0.271
194,mlp,_scale = True; activation = identity; alpha = 0.000435166593065; batch_size = auto; hidden_layer_sizes[0] = 27; hidden_layer_sizes[1] = 213; hidden_layer_sizes[2] = 294; learning_rate = invscaling; learning_rate_init = 0.374984887497; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.652 +- 0.386
195,mlp,_scale = True; activation = logistic; alpha = 0.00876333613234; batch_size = auto; hidden_layer_sizes[0] = 114; hidden_layer_sizes[1] = 250; hidden_layer_sizes[2] = 35; learning_rate = invscaling; learning_rate_init = 0.383422487694; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.728 +- 0.043
196,mlp,_scale = True; activation = logistic; alpha = 0.000302510140249; batch_size = auto; hidden_layer_sizes[0] = 287; hidden_layer_sizes[1] = 109; hidden_layer_sizes[2] = 107; learning_rate = invscaling; learning_rate_init = 0.297023534052; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.686 +- 0.047
197,mlp,_scale = True; activation = identity; alpha = 0.00096205457469; batch_size = auto; hidden_layer_sizes[0] = 91; hidden_layer_sizes[1] = 139; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.826 +- 0.148
198,mlp,_scale = True; activation = identity; alpha = 0.000503623924711; batch_size = auto; hidden_layer_sizes[0] = 104; hidden_layer_sizes[1] = 173; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.761 +- 0.178
199,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 6; weights = uniform,f1 and cv,0.720 +- 0.156
