trail ID,method,parameters,metrics,performance
0,mlp,_scale = True; activation = tanh; alpha = 0.00781487257724; batch_size = auto; hidden_layer_sizes[0] = 272; hidden_layer_sizes[1] = 8; learning_rate = constant; learning_rate_init = 0.0689462938739; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.679 +- 0.214
1,mlp,_scale = True; activation = tanh; alpha = 0.00543619316979; batch_size = auto; hidden_layer_sizes[0] = 259; hidden_layer_sizes[1] = 270; learning_rate = constant; learning_rate_init = 0.687239967578; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.695 +- 0.480
2,mlp,_scale = True; activation = tanh; alpha = 0.00720261760942; batch_size = auto; hidden_layer_sizes[0] = 261; hidden_layer_sizes[1] = 264; learning_rate = constant; learning_rate_init = 0.63223458188; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.808 +- 0.364
3,mlp,_scale = True; activation = tanh; alpha = 0.000188613090589; batch_size = auto; hidden_layer_sizes[0] = 124; hidden_layer_sizes[1] = 62; learning_rate = constant; learning_rate_init = 0.47053941583; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.699 +- 0.418
4,mlp,_scale = True; activation = logistic; alpha = 0.0013054020274; batch_size = auto; hidden_layer_sizes[0] = 282; hidden_layer_sizes[1] = 274; hidden_layer_sizes[2] = 31; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.781 +- 0.378
5,mlp,_scale = True; activation = logistic; alpha = 0.00620897960824; batch_size = auto; hidden_layer_sizes[0] = 129; hidden_layer_sizes[1] = 259; hidden_layer_sizes[2] = 81; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.751 +- 0.414
6,mlp,_scale = True; activation = logistic; alpha = 0.00763163758209; batch_size = auto; hidden_layer_sizes[0] = 152; hidden_layer_sizes[1] = 54; hidden_layer_sizes[2] = 88; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.707 +- 0.480
7,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 1; weights = uniform,f1 and cv,0.616 +- 0.362
8,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 11; weights = uniform,f1 and cv,0.737 +- 0.128
9,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 11; weights = uniform,f1 and cv,0.703 +- 0.453
10,mlp,_scale = True; activation = relu; alpha = 0.00646205227618; batch_size = auto; hidden_layer_sizes[0] = 126; learning_rate = constant; learning_rate_init = 0.885586585832; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.806 +- 0.183
11,mlp,_scale = True; activation = relu; alpha = 0.00131287408101; batch_size = auto; hidden_layer_sizes[0] = 255; learning_rate = constant; learning_rate_init = 0.251704996158; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.655 +- 0.201
12,mlp,_scale = True; activation = relu; alpha = 0.00325404130072; batch_size = auto; hidden_layer_sizes[0] = 126; learning_rate = constant; learning_rate_init = 0.644087243875; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.748 +- 0.318
13,svm,C = 6.75579369313e-05; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 1.39351729562; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.646 +- 0.050
14,svm,C = 3043.0257582; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 54298.6093465; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.000 +- 0.000
15,gp,kernel = matern; nu = 2.5,f1 and cv,0.584 +- 0.164
16,mlp,_scale = True; activation = relu; alpha = 0.00159248380823; batch_size = auto; hidden_layer_sizes[0] = 291; learning_rate = invscaling; learning_rate_init = 0.829468493812; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.785 +- 0.306
17,mlp,_scale = True; activation = relu; alpha = 0.000701749141837; batch_size = auto; hidden_layer_sizes[0] = 26; learning_rate = invscaling; learning_rate_init = 0.322870349042; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.817 +- 0.287
18,mlp,_scale = True; activation = relu; alpha = 0.00588022555101; batch_size = auto; hidden_layer_sizes[0] = 26; learning_rate = invscaling; learning_rate_init = 0.298954761221; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.681 +- 0.210
19,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.713 +- 0.350
20,knn,_scale = True; algorithm = ball_tree; leaf_size = 49; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.684 +- 0.338
21,mlp,_scale = True; activation = identity; alpha = 0.000748664694229; batch_size = auto; hidden_layer_sizes[0] = 105; hidden_layer_sizes[1] = 195; hidden_layer_sizes[2] = 136; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.647 +- 0.196
22,mlp,_scale = True; activation = identity; alpha = 0.000452395637246; batch_size = auto; hidden_layer_sizes[0] = 68; hidden_layer_sizes[1] = 23; hidden_layer_sizes[2] = 281; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.728 +- 0.174
23,mlp,_scale = True; activation = identity; alpha = 0.00161792293576; batch_size = auto; hidden_layer_sizes[0] = 195; learning_rate = constant; learning_rate_init = 0.365688011884; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.639 +- 0.167
24,mlp,_scale = True; activation = identity; alpha = 0.00349736877457; batch_size = auto; hidden_layer_sizes[0] = 12; learning_rate = constant; learning_rate_init = 0.770069409043; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.716 +- 0.285
25,svm,C = 0.0144774687611; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -897; degree = 5; gamma = 9.63953019022e-05; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.654 +- 0.328
26,svm,C = 68361.5583244; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -681; degree = 2; gamma = 6976.80395927; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.699 +- 0.243
27,mlp,_scale = True; activation = logistic; alpha = 0.00521335944684; batch_size = auto; beta_1 = 0.939521502808; beta_2 = 0.879544826331; hidden_layer_sizes[0] = 37; hidden_layer_sizes[1] = 145; learning_rate_init = 0.824208604962; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.646 +- 0.050
28,mlp,_scale = True; activation = logistic; alpha = 0.00227190507883; batch_size = auto; beta_1 = 0.898338191366; beta_2 = 0.910334662878; hidden_layer_sizes[0] = 154; hidden_layer_sizes[1] = 98; learning_rate_init = 0.0333173604139; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.482 +- 0.802
29,rf,criterion = gini; max_depth = 3; max_features = 0.872569897951; min_samples_leaf = 1; n_estimators = 100; n_jobs = -1,f1 and cv,0.698 +- 0.248
30,rf,criterion = gini; max_depth = 3; max_features = 0.412701118037; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.802 +- 0.247
31,logreg,C = 5.5359579201; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 1.95315997637e-05,f1 and cv,0.700 +- 0.448
32,logreg,C = 0.0392440215315; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 16758.1398184,f1 and cv,0.000 +- 0.000
33,gnb,_scale_minmax = True,f1 and cv,0.746 +- 0.162
34,mlp,_scale = True; activation = relu; alpha = 0.00105918357866; batch_size = auto; hidden_layer_sizes[0] = 137; hidden_layer_sizes[1] = 271; learning_rate = constant; learning_rate_init = 0.603980751833; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.758 +- 0.169
35,mlp,_scale = True; activation = relu; alpha = 0.00893820258848; batch_size = auto; hidden_layer_sizes[0] = 4; hidden_layer_sizes[1] = 285; learning_rate = constant; learning_rate_init = 0.622789740096; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.574 +- 0.396
36,knn,_scale = True; algorithm = ball_tree; leaf_size = 22; metric = minkowski; n_neighbors = 11; p = 1; weights = distance,f1 and cv,0.661 +- 0.558
37,knn,_scale = True; algorithm = ball_tree; leaf_size = 10; metric = minkowski; n_neighbors = 10; p = 1; weights = distance,f1 and cv,0.787 +- 0.198
38,logreg,C = 1672.72436359; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 27100.381445,f1 and cv,0.850 +- 0.400
39,logreg,C = 0.00630214753888; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 72.2322909218,f1 and cv,0.690 +- 0.399
40,mlp,_scale = True; activation = relu; alpha = 0.00671090557438; batch_size = auto; hidden_layer_sizes[0] = 169; hidden_layer_sizes[1] = 245; learning_rate = invscaling; learning_rate_init = 0.320680427153; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.712 +- 0.428
41,mlp,_scale = True; activation = relu; alpha = 0.00166052683936; batch_size = auto; hidden_layer_sizes[0] = 57; hidden_layer_sizes[1] = 21; learning_rate = invscaling; learning_rate_init = 0.3787697594; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.715 +- 0.249
42,mlp,_scale = True; activation = identity; alpha = 0.00127587777598; batch_size = auto; hidden_layer_sizes[0] = 55; hidden_layer_sizes[1] = 261; hidden_layer_sizes[2] = 15; learning_rate = invscaling; learning_rate_init = 0.979302563433; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.379 +- 0.414
43,mlp,_scale = True; activation = identity; alpha = 0.00836452785254; batch_size = auto; hidden_layer_sizes[0] = 10; hidden_layer_sizes[1] = 294; hidden_layer_sizes[2] = 24; learning_rate = invscaling; learning_rate_init = 0.0867527859754; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.683 +- 0.395
44,mlp,_scale = True; activation = tanh; alpha = 0.00566483744806; batch_size = auto; beta_1 = 0.941060527496; beta_2 = 0.886333999219; hidden_layer_sizes[0] = 179; hidden_layer_sizes[1] = 163; learning_rate_init = 0.104313563407; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.737 +- 0.128
45,mlp,_scale = True; activation = tanh; alpha = 0.0014836698397; batch_size = auto; beta_1 = 0.866515711814; beta_2 = 0.963674603878; hidden_layer_sizes[0] = 162; hidden_layer_sizes[1] = 229; learning_rate_init = 0.239838223712; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.548 +- 0.255
46,logreg,C = 99.9229727841; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 244.185565265,f1 and cv,0.000 +- 0.000
47,mlp,_scale = True; activation = tanh; alpha = 0.00393734628798; batch_size = auto; hidden_layer_sizes[0] = 218; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.597 +- 0.255
48,mlp,_scale = True; activation = tanh; alpha = 0.00466952886902; batch_size = auto; hidden_layer_sizes[0] = 119; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.740 +- 0.502
49,mlp,_scale = True; activation = relu; alpha = 0.00369484939849; batch_size = auto; hidden_layer_sizes[0] = 172; hidden_layer_sizes[1] = 5; hidden_layer_sizes[2] = 117; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.760 +- 0.292
50,mlp,_scale = True; activation = relu; alpha = 0.00148965686068; batch_size = auto; hidden_layer_sizes[0] = 228; hidden_layer_sizes[1] = 258; hidden_layer_sizes[2] = 128; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.718 +- 0.239
51,mlp,_scale = True; activation = tanh; alpha = 0.00463285433881; batch_size = auto; hidden_layer_sizes[0] = 17; hidden_layer_sizes[1] = 60; learning_rate = invscaling; learning_rate_init = 0.677560559236; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.713 +- 0.142
52,mlp,_scale = True; activation = tanh; alpha = 0.00798742244388; batch_size = auto; hidden_layer_sizes[0] = 200; hidden_layer_sizes[1] = 130; learning_rate = invscaling; learning_rate_init = 0.980172261286; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.796 +- 0.289
53,mlp,_scale = True; activation = identity; alpha = 0.00561226799357; batch_size = auto; hidden_layer_sizes[0] = 36; hidden_layer_sizes[1] = 113; hidden_layer_sizes[2] = 51; learning_rate = constant; learning_rate_init = 0.359050106477; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.704 +- 0.227
54,mlp,_scale = True; activation = identity; alpha = 0.00522574484514; batch_size = auto; hidden_layer_sizes[0] = 32; hidden_layer_sizes[1] = 232; hidden_layer_sizes[2] = 184; learning_rate = constant; learning_rate_init = 0.390107009433; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.371 +- 0.732
55,knn,_scale = True; algorithm = kd_tree; leaf_size = 42; metric = minkowski; n_neighbors = 9; p = 2; weights = distance,f1 and cv,0.601 +- 0.126
56,knn,_scale = True; algorithm = kd_tree; leaf_size = 49; metric = minkowski; n_neighbors = 10; p = 2; weights = distance,f1 and cv,0.755 +- 0.339
57,mlp,_scale = True; activation = logistic; alpha = 0.00493108097032; batch_size = auto; hidden_layer_sizes[0] = 67; hidden_layer_sizes[1] = 135; learning_rate = invscaling; learning_rate_init = 0.0413872867992; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.707 +- 0.042
58,mlp,_scale = True; activation = logistic; alpha = 0.00749174273334; batch_size = auto; hidden_layer_sizes[0] = 244; hidden_layer_sizes[1] = 44; learning_rate = invscaling; learning_rate_init = 0.0678221650796; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.400 +- 0.653
59,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 4; weights = distance,f1 and cv,0.728 +- 0.421
60,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 10; weights = distance,f1 and cv,0.630 +- 0.485
61,svm,C = 108.321856002; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.676 +- 0.306
62,svm,C = 0.22058306113; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.522 +- 0.548
63,logreg,C = 402.075650797; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 422.081243442,f1 and cv,0.000 +- 0.000
64,mlp,_scale = True; activation = relu; alpha = 0.00447154493894; batch_size = auto; hidden_layer_sizes[0] = 133; hidden_layer_sizes[1] = 227; hidden_layer_sizes[2] = 48; learning_rate = adaptive; learning_rate_init = 0.435971730209; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.665 +- 0.459
65,mlp,_scale = True; activation = relu; alpha = 0.00877916277485; batch_size = auto; hidden_layer_sizes[0] = 150; hidden_layer_sizes[1] = 37; hidden_layer_sizes[2] = 274; learning_rate = adaptive; learning_rate_init = 0.0572993617058; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.672 +- 0.466
66,rf,criterion = entropy; max_depth = 5; max_features = 0.556456563127; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.669 +- 0.443
67,rf,criterion = entropy; max_depth = 2; max_features = 0.98545646594; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.726 +- 0.415
68,dt,criterion = entropy; max_depth = 5; max_features = 0.900550608963; min_samples_leaf = 1; min_samples_split = 3,f1 and cv,0.640 +- 0.491
69,dt,criterion = entropy; max_depth = 10; max_features = 0.910163275881; min_samples_leaf = 1; min_samples_split = 2,f1 and cv,0.632 +- 0.387
70,mlp,_scale = True; activation = identity; alpha = 0.00682078560952; batch_size = auto; beta_1 = 0.969193004536; beta_2 = 0.958225007994; hidden_layer_sizes[0] = 93; learning_rate_init = 0.913931202199; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.868 +- 0.177
71,mlp,_scale = True; activation = identity; alpha = 0.00645779541489; batch_size = auto; beta_1 = 0.913476793807; beta_2 = 0.949688737801; hidden_layer_sizes[0] = 102; learning_rate_init = 0.133057916229; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.680 +- 0.422
72,gp,kernel = rbf,f1 and cv,0.000 +- 0.000
73,mlp,_scale = True; activation = logistic; alpha = 0.00446415534919; batch_size = auto; hidden_layer_sizes[0] = 270; learning_rate = adaptive; learning_rate_init = 0.595166464296; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.565 +- 0.566
74,mlp,_scale = True; activation = logistic; alpha = 0.00047361483565; batch_size = auto; hidden_layer_sizes[0] = 199; learning_rate = adaptive; learning_rate_init = 0.115392078419; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.742 +- 0.323
75,mlp,_scale = True; activation = identity; alpha = 0.00334901377344; batch_size = auto; hidden_layer_sizes[0] = 191; hidden_layer_sizes[1] = 196; learning_rate = invscaling; learning_rate_init = 0.385631095821; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.695 +- 0.422
76,mlp,_scale = True; activation = identity; alpha = 0.000729809390053; batch_size = auto; hidden_layer_sizes[0] = 191; hidden_layer_sizes[1] = 9; learning_rate = invscaling; learning_rate_init = 0.376426628893; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.771 +- 0.272
77,mlp,_scale = True; activation = relu; alpha = 0.00677952040327; batch_size = auto; hidden_layer_sizes[0] = 78; hidden_layer_sizes[1] = 203; learning_rate = adaptive; learning_rate_init = 0.552285906706; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.705 +- 0.236
78,mlp,_scale = True; activation = relu; alpha = 0.00484606282802; batch_size = auto; hidden_layer_sizes[0] = 121; hidden_layer_sizes[1] = 32; learning_rate = adaptive; learning_rate_init = 0.525993295773; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.669 +- 0.394
79,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = minkowski; n_neighbors = 1; p = 2; weights = uniform,f1 and cv,0.624 +- 0.254
80,knn,_scale = True; algorithm = kd_tree; leaf_size = 36; metric = minkowski; n_neighbors = 6; p = 3; weights = uniform,f1 and cv,0.736 +- 0.408
81,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 9; weights = distance,f1 and cv,0.710 +- 0.346
82,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = distance,f1 and cv,0.875 +- 0.077
83,mlp,_scale = True; activation = logistic; alpha = 0.00455678708933; batch_size = auto; hidden_layer_sizes[0] = 226; hidden_layer_sizes[1] = 289; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.557 +- 0.301
84,mlp,_scale = True; activation = logistic; alpha = 0.00770313808357; batch_size = auto; hidden_layer_sizes[0] = 114; hidden_layer_sizes[1] = 131; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.703 +- 0.434
85,gp,kernel = exp_sine_squared; length_scale = 88.5811912348; periodicity = 1,f1 and cv,0.000 +- 0.000
86,mlp,_scale = True; activation = identity; alpha = 0.00563614677265; batch_size = auto; hidden_layer_sizes[0] = 225; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.638 +- 0.284
87,mlp,_scale = True; activation = identity; alpha = 0.00530367936218; batch_size = auto; hidden_layer_sizes[0] = 239; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.772 +- 0.212
88,mlp,_scale = True; activation = logistic; alpha = 0.00135750262202; batch_size = auto; hidden_layer_sizes[0] = 201; hidden_layer_sizes[1] = 173; learning_rate = adaptive; learning_rate_init = 0.704545467478; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.267 +- 0.653
89,mlp,_scale = True; activation = logistic; alpha = 0.00781371196677; batch_size = auto; hidden_layer_sizes[0] = 226; hidden_layer_sizes[1] = 129; learning_rate = adaptive; learning_rate_init = 0.38252192812; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.543 +- 0.544
90,mlp,_scale = True; activation = tanh; alpha = 0.000225589838368; batch_size = auto; hidden_layer_sizes[0] = 70; learning_rate = invscaling; learning_rate_init = 0.24047934953; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.796 +- 0.169
91,mlp,_scale = True; activation = tanh; alpha = 0.0014621770276; batch_size = auto; hidden_layer_sizes[0] = 278; learning_rate = invscaling; learning_rate_init = 0.526678709592; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.849 +- 0.222
92,mlp,_scale = True; activation = logistic; alpha = 0.000395881669625; batch_size = auto; beta_1 = 0.977413026071; beta_2 = 0.824084664119; hidden_layer_sizes[0] = 160; hidden_layer_sizes[1] = 153; hidden_layer_sizes[2] = 63; learning_rate_init = 0.908710334663; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.543 +- 0.544
93,mlp,_scale = True; activation = logistic; alpha = 0.000926257945602; batch_size = auto; beta_1 = 0.909017076342; beta_2 = 0.904584995376; hidden_layer_sizes[0] = 208; hidden_layer_sizes[1] = 36; hidden_layer_sizes[2] = 2; learning_rate_init = 0.894332904907; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.279 +- 0.684
94,mlp,_scale = True; activation = tanh; alpha = 0.00752796608981; batch_size = auto; beta_1 = 0.843095206821; beta_2 = 0.954782682046; hidden_layer_sizes[0] = 43; hidden_layer_sizes[1] = 38; hidden_layer_sizes[2] = 272; learning_rate_init = 0.678536955782; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.654 +- 0.538
95,mlp,_scale = True; activation = tanh; alpha = 0.00104497384797; batch_size = auto; beta_1 = 0.946565507377; beta_2 = 0.809265708154; hidden_layer_sizes[0] = 39; hidden_layer_sizes[1] = 238; hidden_layer_sizes[2] = 134; learning_rate_init = 0.176380045981; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.759 +- 0.276
96,knn,_scale = True; algorithm = kd_tree; leaf_size = 35; metric = manhattan; n_neighbors = 7; weights = distance,f1 and cv,0.633 +- 0.311
97,knn,_scale = True; algorithm = kd_tree; leaf_size = 39; metric = manhattan; n_neighbors = 18; weights = distance,f1 and cv,0.895 +- 0.256
98,knn,_scale = True; algorithm = kd_tree; leaf_size = 4; metric = euclidean; n_neighbors = 19; weights = distance,f1 and cv,0.635 +- 0.676
99,knn,_scale = True; algorithm = kd_tree; leaf_size = 18; metric = euclidean; n_neighbors = 5; weights = distance,f1 and cv,0.599 +- 0.519
100,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 6; weights = uniform,f1 and cv,0.653 +- 0.272
101,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 5; weights = uniform,f1 and cv,0.763 +- 0.198
102,logreg,C = 4.97088705431e-05; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 222.17699589,f1 and cv,0.744 +- 0.266
103,logreg,C = 0.330721375771; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.0847406446969,f1 and cv,0.756 +- 0.218
104,mlp,_scale = True; activation = identity; alpha = 0.00388200759279; batch_size = auto; beta_1 = 0.803310010916; beta_2 = 0.847518868014; hidden_layer_sizes[0] = 3; hidden_layer_sizes[1] = 253; hidden_layer_sizes[2] = 240; learning_rate_init = 0.779752504983; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.665 +- 0.304
105,mlp,_scale = True; activation = identity; alpha = 0.00405917657162; batch_size = auto; beta_1 = 0.948791716906; beta_2 = 0.877991922699; hidden_layer_sizes[0] = 211; hidden_layer_sizes[1] = 268; hidden_layer_sizes[2] = 148; learning_rate_init = 0.206409734509; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.621 +- 0.646
106,mlp,_scale = True; activation = logistic; alpha = 0.00107775400387; batch_size = auto; hidden_layer_sizes[0] = 38; hidden_layer_sizes[1] = 260; hidden_layer_sizes[2] = 117; learning_rate = invscaling; learning_rate_init = 0.879719962022; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.585 +- 0.586
107,mlp,_scale = True; activation = logistic; alpha = 0.00746351178429; batch_size = auto; hidden_layer_sizes[0] = 235; hidden_layer_sizes[1] = 209; hidden_layer_sizes[2] = 139; learning_rate = invscaling; learning_rate_init = 0.739358703115; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.565 +- 0.566
108,mlp,_scale = True; activation = relu; alpha = 0.00755618547266; batch_size = auto; beta_1 = 0.818251038404; beta_2 = 0.804836838455; hidden_layer_sizes[0] = 156; hidden_layer_sizes[1] = 292; hidden_layer_sizes[2] = 229; learning_rate_init = 0.231899738619; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.499 +- 0.551
109,mlp,_scale = True; activation = relu; alpha = 0.000890173654937; batch_size = auto; beta_1 = 0.888752607999; beta_2 = 0.905503364471; hidden_layer_sizes[0] = 115; hidden_layer_sizes[1] = 116; hidden_layer_sizes[2] = 74; learning_rate_init = 0.496824150454; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.463 +- 0.593
110,mlp,_scale = True; activation = tanh; alpha = 0.00430648251732; batch_size = auto; hidden_layer_sizes[0] = 57; hidden_layer_sizes[1] = 200; hidden_layer_sizes[2] = 224; learning_rate = invscaling; learning_rate_init = 0.263792190615; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.683 +- 0.377
111,mlp,_scale = True; activation = tanh; alpha = 0.00792514853509; batch_size = auto; hidden_layer_sizes[0] = 58; hidden_layer_sizes[1] = 298; hidden_layer_sizes[2] = 209; learning_rate = invscaling; learning_rate_init = 0.504780015822; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.798 +- 0.417
112,mlp,_scale = True; activation = identity; alpha = 0.000574869927736; batch_size = auto; hidden_layer_sizes[0] = 58; hidden_layer_sizes[1] = 200; learning_rate = constant; learning_rate_init = 0.0847381122613; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.734 +- 0.139
113,mlp,_scale = True; activation = identity; alpha = 0.00748872282397; batch_size = auto; hidden_layer_sizes[0] = 243; hidden_layer_sizes[1] = 215; learning_rate = constant; learning_rate_init = 0.864295574622; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.567 +- 0.265
114,gp,kernel = exp_sine_squared; length_scale = 1.23258725702; periodicity = 1,f1 and cv,0.534 +- 0.554
115,mlp,_scale = True; activation = identity; alpha = 0.00146328031265; batch_size = auto; hidden_layer_sizes[0] = 273; hidden_layer_sizes[1] = 261; hidden_layer_sizes[2] = 17; learning_rate = adaptive; learning_rate_init = 0.662340589203; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
116,mlp,_scale = True; activation = logistic; alpha = 0.00168729100821; batch_size = auto; beta_1 = 0.862405862008; beta_2 = 0.863444265573; hidden_layer_sizes[0] = 90; learning_rate_init = 0.921266595151; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.640 +- 0.676
117,mlp,_scale = True; activation = logistic; alpha = 0.00216221770935; batch_size = auto; beta_1 = 0.854074335995; beta_2 = 0.915921532413; hidden_layer_sizes[0] = 20; learning_rate_init = 0.734002657964; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.718 +- 0.209
118,mlp,_scale = True; activation = identity; alpha = 0.00520025456826; batch_size = auto; hidden_layer_sizes[0] = 165; hidden_layer_sizes[1] = 154; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.716 +- 0.441
119,mlp,_scale = True; activation = identity; alpha = 0.00547849454578; batch_size = auto; hidden_layer_sizes[0] = 162; hidden_layer_sizes[1] = 291; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.758 +- 0.409
120,mlp,_scale = True; activation = relu; alpha = 0.00468474485894; batch_size = auto; hidden_layer_sizes[0] = 160; hidden_layer_sizes[1] = 208; hidden_layer_sizes[2] = 237; learning_rate = constant; learning_rate_init = 0.124026768608; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.775 +- 0.306
121,mlp,_scale = True; activation = relu; alpha = 0.00585513262572; batch_size = auto; hidden_layer_sizes[0] = 216; hidden_layer_sizes[1] = 191; hidden_layer_sizes[2] = 225; learning_rate = constant; learning_rate_init = 0.316155619041; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.742 +- 0.244
122,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = euclidean; n_neighbors = 13; weights = distance,f1 and cv,0.782 +- 0.323
123,knn,_scale = True; algorithm = ball_tree; leaf_size = 29; metric = euclidean; n_neighbors = 20; weights = distance,f1 and cv,0.741 +- 0.164
124,svm,C = 4418.48406248; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -410; gamma = 0.0128200591314; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.000 +- 0.000
125,knn,_scale = True; algorithm = ball_tree; leaf_size = 16; metric = chebyshev; n_neighbors = 15; weights = distance,f1 and cv,0.660 +- 0.393
126,knn,_scale = True; algorithm = ball_tree; leaf_size = 14; metric = chebyshev; n_neighbors = 20; weights = distance,f1 and cv,0.585 +- 0.366
127,knn,_scale = True; algorithm = ball_tree; leaf_size = 35; metric = minkowski; n_neighbors = 7; p = 3; weights = uniform,f1 and cv,0.667 +- 0.146
128,knn,_scale = True; algorithm = ball_tree; leaf_size = 1; metric = minkowski; n_neighbors = 19; p = 3; weights = uniform,f1 and cv,0.623 +- 0.441
129,gp,kernel = matern; nu = 0.5,f1 and cv,0.451 +- 0.198
130,mlp,_scale = True; activation = logistic; alpha = 0.000492057617733; batch_size = auto; hidden_layer_sizes[0] = 183; hidden_layer_sizes[1] = 44; hidden_layer_sizes[2] = 22; learning_rate = adaptive; learning_rate_init = 0.0803546188134; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.747 +- 0.054
131,mlp,_scale = True; activation = logistic; alpha = 0.0061092024869; batch_size = auto; hidden_layer_sizes[0] = 245; hidden_layer_sizes[1] = 225; hidden_layer_sizes[2] = 115; learning_rate = adaptive; learning_rate_init = 0.261554783012; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.246 +- 0.603
132,dt,criterion = gini; max_depth = 9; max_features = 0.20530013294; min_samples_leaf = 3; min_samples_split = 4,f1 and cv,0.722 +- 0.431
133,dt,criterion = gini; max_depth = 5; max_features = 0.895429193079; min_samples_leaf = 2; min_samples_split = 4,f1 and cv,0.671 +- 0.226
134,mlp,_scale = True; activation = logistic; alpha = 0.00493337414245; batch_size = auto; hidden_layer_sizes[0] = 225; hidden_layer_sizes[1] = 249; learning_rate = constant; learning_rate_init = 0.388841600493; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.143 +- 0.571
135,mlp,_scale = True; activation = logistic; alpha = 0.00107313907428; batch_size = auto; hidden_layer_sizes[0] = 125; hidden_layer_sizes[1] = 79; learning_rate = constant; learning_rate_init = 0.913790170325; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.747 +- 0.054
136,svm,C = 0.000699346092196; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -356; gamma = 2904.70602162; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.646 +- 0.050
137,mlp,_scale = True; activation = identity; alpha = 0.00734266673854; batch_size = auto; beta_1 = 0.961171981627; beta_2 = 0.888975972278; hidden_layer_sizes[0] = 257; hidden_layer_sizes[1] = 298; learning_rate_init = 0.414234249407; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.714 +- 0.328
138,mlp,_scale = True; activation = identity; alpha = 0.00161530133551; batch_size = auto; beta_1 = 0.936825982064; beta_2 = 0.95893046097; hidden_layer_sizes[0] = 164; hidden_layer_sizes[1] = 125; learning_rate_init = 0.453433432399; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.659 +- 0.427
139,mlp,_scale = True; activation = relu; alpha = 0.00163845695715; batch_size = auto; hidden_layer_sizes[0] = 284; learning_rate = adaptive; learning_rate_init = 0.429799911569; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.768 +- 0.312
140,mlp,_scale = True; activation = relu; alpha = 0.00657294944483; batch_size = auto; hidden_layer_sizes[0] = 203; learning_rate = adaptive; learning_rate_init = 0.451312921609; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.827 +- 0.195
141,knn,_scale = True; algorithm = ball_tree; leaf_size = 28; metric = manhattan; n_neighbors = 4; weights = uniform,f1 and cv,0.758 +- 0.155
142,knn,_scale = True; algorithm = ball_tree; leaf_size = 46; metric = manhattan; n_neighbors = 12; weights = uniform,f1 and cv,0.562 +- 0.382
143,mlp,_scale = True; activation = tanh; alpha = 0.00476005930825; batch_size = auto; beta_1 = 0.837603101953; beta_2 = 0.955572625664; hidden_layer_sizes[0] = 62; learning_rate_init = 0.836221756772; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.749 +- 0.283
144,mlp,_scale = True; activation = tanh; alpha = 0.00686387329794; batch_size = auto; beta_1 = 0.893992260512; beta_2 = 0.831867746086; hidden_layer_sizes[0] = 206; learning_rate_init = 0.453787250521; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.677 +- 0.361
145,mlp,_scale = True; activation = tanh; alpha = 0.00288630618482; batch_size = auto; hidden_layer_sizes[0] = 291; hidden_layer_sizes[1] = 85; learning_rate = adaptive; learning_rate_init = 0.456429072586; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.549 +- 0.559
146,mlp,_scale = True; activation = tanh; alpha = 0.00213734631388; batch_size = auto; hidden_layer_sizes[0] = 264; hidden_layer_sizes[1] = 39; learning_rate = adaptive; learning_rate_init = 0.137660603614; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.819 +- 0.282
147,mlp,_scale = True; activation = relu; alpha = 0.000527020841096; batch_size = auto; hidden_layer_sizes[0] = 270; hidden_layer_sizes[1] = 119; hidden_layer_sizes[2] = 191; learning_rate = invscaling; learning_rate_init = 0.132056020654; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.704 +- 0.265
148,mlp,_scale = True; activation = relu; alpha = 0.000167336640832; batch_size = auto; hidden_layer_sizes[0] = 119; hidden_layer_sizes[1] = 138; hidden_layer_sizes[2] = 79; learning_rate = invscaling; learning_rate_init = 0.579541176656; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.783 +- 0.389
149,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 2; p = 2; weights = distance,f1 and cv,0.577 +- 0.397
150,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 5; p = 1; weights = distance,f1 and cv,0.758 +- 0.297
151,mlp,_scale = True; activation = tanh; alpha = 0.00830371973064; batch_size = auto; hidden_layer_sizes[0] = 215; learning_rate = adaptive; learning_rate_init = 0.217830033624; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.735 +- 0.218
152,mlp,_scale = True; activation = tanh; alpha = 0.00593473166394; batch_size = auto; hidden_layer_sizes[0] = 156; learning_rate = adaptive; learning_rate_init = 0.0917559046633; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.592 +- 0.701
153,knn,_scale = True; algorithm = kd_tree; leaf_size = 22; metric = manhattan; n_neighbors = 17; weights = uniform,f1 and cv,0.617 +- 0.663
154,knn,_scale = True; algorithm = kd_tree; leaf_size = 31; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.656 +- 0.478
155,logreg,C = 0.00306769302685; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 0.012801448798,f1 and cv,0.788 +- 0.379
156,logreg,C = 177.566822646; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 36300.246269,f1 and cv,0.000 +- 0.000
157,mlp,_scale = True; activation = logistic; alpha = 0.00292235765101; batch_size = auto; hidden_layer_sizes[0] = 219; hidden_layer_sizes[1] = 215; hidden_layer_sizes[2] = 261; learning_rate = constant; learning_rate_init = 0.463754226406; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.562 +- 0.563
158,mlp,_scale = True; activation = logistic; alpha = 0.00336265552639; batch_size = auto; hidden_layer_sizes[0] = 134; hidden_layer_sizes[1] = 288; hidden_layer_sizes[2] = 113; learning_rate = constant; learning_rate_init = 0.106379752839; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
159,knn,_scale = True; algorithm = kd_tree; leaf_size = 20; metric = chebyshev; n_neighbors = 3; weights = distance,f1 and cv,0.660 +- 0.350
160,knn,_scale = True; algorithm = kd_tree; leaf_size = 15; metric = chebyshev; n_neighbors = 11; weights = distance,f1 and cv,0.651 +- 0.217
161,mlp,_scale = True; activation = identity; alpha = 0.000333265318374; batch_size = auto; hidden_layer_sizes[0] = 13; hidden_layer_sizes[1] = 227; learning_rate = adaptive; learning_rate_init = 0.121745354886; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.770 +- 0.286
162,mlp,_scale = True; activation = identity; alpha = 0.00294752057394; batch_size = auto; hidden_layer_sizes[0] = 128; hidden_layer_sizes[1] = 205; learning_rate = adaptive; learning_rate_init = 0.598308980669; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.617 +- 0.347
163,mlp,_scale = True; activation = identity; alpha = 0.00516176907568; batch_size = auto; hidden_layer_sizes[0] = 194; hidden_layer_sizes[1] = 79; hidden_layer_sizes[2] = 153; learning_rate = adaptive; learning_rate_init = 0.353882854198; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.584 +- 0.372
164,knn,_scale = True; algorithm = ball_tree; leaf_size = 38; metric = manhattan; n_neighbors = 9; weights = distance,f1 and cv,0.739 +- 0.230
165,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = manhattan; n_neighbors = 8; weights = distance,f1 and cv,0.686 +- 0.401
166,mlp,_scale = True; activation = tanh; alpha = 0.00335381389702; batch_size = auto; hidden_layer_sizes[0] = 221; learning_rate = constant; learning_rate_init = 0.0543684388061; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.729 +- 0.266
167,mlp,_scale = True; activation = tanh; alpha = 0.000718678014138; batch_size = auto; hidden_layer_sizes[0] = 194; learning_rate = constant; learning_rate_init = 0.817123258156; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.699 +- 0.285
168,mlp,_scale = True; activation = identity; alpha = 0.00742865324697; batch_size = auto; hidden_layer_sizes[0] = 7; learning_rate = adaptive; learning_rate_init = 0.104806834524; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.691 +- 0.059
169,mlp,_scale = True; activation = identity; alpha = 0.00842933174699; batch_size = auto; hidden_layer_sizes[0] = 145; learning_rate = adaptive; learning_rate_init = 0.47682224929; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.675 +- 0.272
170,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 10; weights = distance,f1 and cv,0.760 +- 0.113
171,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 4; weights = distance,f1 and cv,0.636 +- 0.180
172,gp,kernel = exp_sine_squared; length_scale = 6.13840945438; periodicity = 0,f1 and cv,0.574 +- 0.574
173,gp,kernel = exp_sine_squared; length_scale = 27.2598804204; periodicity = 0,f1 and cv,0.000 +- 0.000
174,mlp,_scale = True; activation = tanh; alpha = 0.00389901170727; batch_size = auto; hidden_layer_sizes[0] = 31; hidden_layer_sizes[1] = 12; hidden_layer_sizes[2] = 292; learning_rate = constant; learning_rate_init = 0.352909877432; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.681 +- 0.343
175,mlp,_scale = True; activation = tanh; alpha = 0.00861460532622; batch_size = auto; hidden_layer_sizes[0] = 2; hidden_layer_sizes[1] = 251; hidden_layer_sizes[2] = 239; learning_rate = constant; learning_rate_init = 0.802964762108; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.715 +- 0.249
176,mlp,_scale = True; activation = tanh; alpha = 0.00796704569567; batch_size = auto; hidden_layer_sizes[0] = 179; hidden_layer_sizes[1] = 7; hidden_layer_sizes[2] = 157; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.752 +- 0.207
177,mlp,_scale = True; activation = tanh; alpha = 0.00108419022247; batch_size = auto; hidden_layer_sizes[0] = 283; hidden_layer_sizes[1] = 73; hidden_layer_sizes[2] = 51; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.641 +- 0.121
178,knn,_scale = True; algorithm = ball_tree; leaf_size = 21; metric = euclidean; n_neighbors = 7; weights = uniform,f1 and cv,0.695 +- 0.235
179,knn,_scale = True; algorithm = ball_tree; leaf_size = 42; metric = euclidean; n_neighbors = 13; weights = uniform,f1 and cv,0.705 +- 0.435
180,mlp,_scale = True; activation = tanh; alpha = 0.00354606375968; batch_size = auto; hidden_layer_sizes[0] = 10; hidden_layer_sizes[1] = 27; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.775 +- 0.128
181,mlp,_scale = True; activation = tanh; alpha = 0.00774998611852; batch_size = auto; hidden_layer_sizes[0] = 206; hidden_layer_sizes[1] = 140; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.756 +- 0.242
182,gp,kernel = constant,f1 and cv,0.728 +- 0.043
183,logreg,C = 1250.42827557; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 0.00118418554271,f1 and cv,0.703 +- 0.157
184,logreg,C = 0.000256996185277; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 10261.6124623,f1 and cv,0.000 +- 0.000
185,mlp,_scale = True; activation = logistic; alpha = 0.00014692611716; batch_size = auto; hidden_layer_sizes[0] = 42; learning_rate = constant; learning_rate_init = 0.974463794961; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.527 +- 0.560
186,mlp,_scale = True; activation = logistic; alpha = 0.0044263395726; batch_size = auto; hidden_layer_sizes[0] = 173; learning_rate = constant; learning_rate_init = 0.696057688579; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.475 +- 0.478
187,mlp,_scale = True; activation = tanh; alpha = 0.00241873404932; batch_size = auto; hidden_layer_sizes[0] = 219; hidden_layer_sizes[1] = 187; hidden_layer_sizes[2] = 300; learning_rate = adaptive; learning_rate_init = 0.687763327145; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.566 +- 0.376
188,mlp,_scale = True; activation = tanh; alpha = 0.0038955923106; batch_size = auto; hidden_layer_sizes[0] = 244; hidden_layer_sizes[1] = 124; hidden_layer_sizes[2] = 211; learning_rate = adaptive; learning_rate_init = 0.881892229762; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.693 +- 0.136
189,gp,kernel = matern; nu = 1.5,f1 and cv,0.643 +- 0.403
190,knn,_scale = True; algorithm = kd_tree; leaf_size = 1; metric = euclidean; n_neighbors = 17; weights = uniform,f1 and cv,0.667 +- 0.183
191,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = euclidean; n_neighbors = 16; weights = uniform,f1 and cv,0.706 +- 0.264
192,mnb,_scale_minmax = True; alpha = 0.876309586449; class_prior = None; fit_prior = 1,f1 and cv,0.788 +- 0.051
193,mnb,_scale_minmax = True; alpha = 0.688666400872; class_prior = None; fit_prior = 0,f1 and cv,0.737 +- 0.120
194,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = chebyshev; n_neighbors = 14; weights = uniform,f1 and cv,0.777 +- 0.225
195,knn,_scale = True; algorithm = kd_tree; leaf_size = 27; metric = chebyshev; n_neighbors = 19; weights = uniform,f1 and cv,0.742 +- 0.112
196,mlp,_scale = True; activation = relu; alpha = 0.00118456803489; batch_size = auto; hidden_layer_sizes[0] = 29; hidden_layer_sizes[1] = 97; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.655 +- 0.337
197,mlp,_scale = True; activation = relu; alpha = 0.00716166598187; batch_size = auto; hidden_layer_sizes[0] = 5; hidden_layer_sizes[1] = 171; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.683 +- 0.427
198,mlp,_scale = True; activation = relu; alpha = 0.00498911153908; batch_size = auto; beta_1 = 0.896843350434; beta_2 = 0.9872568151; hidden_layer_sizes[0] = 57; hidden_layer_sizes[1] = 104; learning_rate_init = 0.647266236782; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.100 +- 0.400
199,mlp,_scale = True; activation = relu; alpha = 0.0086748781932; batch_size = auto; beta_1 = 0.808846389859; beta_2 = 0.918761804441; hidden_layer_sizes[0] = 5; hidden_layer_sizes[1] = 116; learning_rate_init = 0.839328146746; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.516 +- 0.581
200,mlp,_scale = True; activation = logistic; alpha = 0.00791651056937; batch_size = auto; hidden_layer_sizes[0] = 96; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.702 +- 0.363
201,mlp,_scale = True; activation = logistic; alpha = 0.00761269673425; batch_size = auto; hidden_layer_sizes[0] = 195; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.741 +- 0.281
202,mlp,_scale = True; activation = logistic; alpha = 0.00599579013339; batch_size = auto; hidden_layer_sizes[0] = 132; learning_rate = invscaling; learning_rate_init = 0.878033337806; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.739 +- 0.178
203,mlp,_scale = True; activation = logistic; alpha = 0.00819682558214; batch_size = auto; hidden_layer_sizes[0] = 243; learning_rate = invscaling; learning_rate_init = 0.807274141581; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.567 +- 0.653
204,mlp,_scale = True; activation = relu; alpha = 0.0014727938631; batch_size = auto; hidden_layer_sizes[0] = 237; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.800 +- 0.116
205,mlp,_scale = True; activation = relu; alpha = 0.00554646313568; batch_size = auto; hidden_layer_sizes[0] = 124; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.743 +- 0.264
206,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.619 +- 0.687
207,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 9; weights = uniform,f1 and cv,0.732 +- 0.216
208,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 6; p = 1; weights = uniform,f1 and cv,0.819 +- 0.152
209,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 14; p = 3; weights = uniform,f1 and cv,0.664 +- 0.262
210,gp,alpha = 0.441179556454; kernel = rational_quadratic; length_scale = 0.0590781492897,f1 and cv,0.577 +- 0.378
211,gp,alpha = 0.394747125512; kernel = rational_quadratic; length_scale = 0.454814209874,f1 and cv,0.620 +- 0.131
212,mlp,_scale = True; activation = relu; alpha = 0.00384623541841; batch_size = auto; beta_1 = 0.937909544848; beta_2 = 0.889828852962; hidden_layer_sizes[0] = 260; learning_rate_init = 0.981211355904; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.682 +- 0.311
213,mlp,_scale = True; activation = relu; alpha = 0.00365876945699; batch_size = auto; beta_1 = 0.894011255549; beta_2 = 0.802233668538; hidden_layer_sizes[0] = 27; learning_rate_init = 0.406507847967; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.745 +- 0.274
214,mlp,_scale = True; activation = identity; alpha = 0.00845645787211; batch_size = auto; hidden_layer_sizes[0] = 273; learning_rate = invscaling; learning_rate_init = 0.445585302825; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.767 +- 0.149
215,mlp,_scale = True; activation = identity; alpha = 0.00108570440386; batch_size = auto; hidden_layer_sizes[0] = 121; learning_rate = invscaling; learning_rate_init = 0.895340433661; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.864 +- 0.219
216,mlp,_scale = True; activation = tanh; alpha = 0.000728993751142; batch_size = auto; hidden_layer_sizes[0] = 278; learning_rate = invscaling; learning_rate_init = 0.670393489284; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.657 +- 0.276
217,mlp,_scale = True; activation = identity; alpha = 0.00590165715418; batch_size = auto; hidden_layer_sizes[0] = 121; learning_rate = invscaling; learning_rate_init = 0.86357115334; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.777 +- 0.245
218,mlp,_scale = True; activation = relu; alpha = 0.00458576632242; batch_size = auto; hidden_layer_sizes[0] = 203; learning_rate = adaptive; learning_rate_init = 0.303130900389; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.622 +- 0.207
219,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = distance,f1 and cv,0.754 +- 0.393
220,mlp,_scale = True; activation = identity; alpha = 0.0061414985785; batch_size = auto; beta_1 = 0.850813944282; beta_2 = 0.819958129268; hidden_layer_sizes[0] = 93; learning_rate_init = 0.743269273633; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.761 +- 0.209
221,mlp,_scale = True; activation = relu; alpha = 0.00301544594515; batch_size = auto; hidden_layer_sizes[0] = 237; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.734 +- 0.086
222,logreg,C = 316.540829698; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 113.651538457,f1 and cv,0.749 +- 0.297
223,mlp,_scale = True; activation = tanh; alpha = 0.00748704668471; batch_size = auto; hidden_layer_sizes[0] = 10; hidden_layer_sizes[1] = 20; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.602 +- 0.637
224,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = manhattan; n_neighbors = 18; weights = distance,f1 and cv,0.672 +- 0.463
225,mnb,_scale_minmax = True; alpha = 0.998765544364; class_prior = None; fit_prior = 1,f1 and cv,0.670 +- 0.229
226,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = euclidean; n_neighbors = 13; weights = distance,f1 and cv,0.703 +- 0.324
227,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = chebyshev; n_neighbors = 14; weights = uniform,f1 and cv,0.762 +- 0.128
228,mlp,_scale = True; activation = relu; alpha = 0.000284386971655; batch_size = auto; hidden_layer_sizes[0] = 151; hidden_layer_sizes[1] = 3; hidden_layer_sizes[2] = 103; learning_rate = constant; learning_rate_init = 0.695437589557; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.696 +- 0.192
229,mlp,_scale = True; activation = tanh; alpha = 0.00280894987658; batch_size = auto; hidden_layer_sizes[0] = 198; hidden_layer_sizes[1] = 135; learning_rate = invscaling; learning_rate_init = 0.317156548818; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.865 +- 0.253
230,logreg,C = 0.379743154494; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.069387906243,f1 and cv,0.784 +- 0.242
231,rf,criterion = gini; max_depth = 3; max_features = 0.414843892414; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.802 +- 0.307
232,mlp,_scale = True; activation = relu; alpha = 0.00546833979991; batch_size = auto; hidden_layer_sizes[0] = 108; hidden_layer_sizes[1] = 193; hidden_layer_sizes[2] = 34; learning_rate = invscaling; learning_rate_init = 0.189587204661; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.781 +- 0.163
233,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 6; p = 1; weights = uniform,f1 and cv,0.812 +- 0.379
234,mlp,_scale = True; activation = tanh; alpha = 0.00823992812488; batch_size = auto; hidden_layer_sizes[0] = 295; hidden_layer_sizes[1] = 294; hidden_layer_sizes[2] = 44; learning_rate = invscaling; learning_rate_init = 0.481404118046; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.794 +- 0.209
235,mlp,_scale = True; activation = relu; alpha = 0.00399410990265; batch_size = auto; hidden_layer_sizes[0] = 233; hidden_layer_sizes[1] = 17; hidden_layer_sizes[2] = 9; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.783 +- 0.259
236,mlp,_scale = True; activation = identity; alpha = 0.00630579760633; batch_size = auto; hidden_layer_sizes[0] = 162; hidden_layer_sizes[1] = 289; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.715 +- 0.157
237,mlp,_scale = True; activation = identity; alpha = 0.00612355292055; batch_size = auto; hidden_layer_sizes[0] = 189; hidden_layer_sizes[1] = 10; learning_rate = invscaling; learning_rate_init = 0.316571358391; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.714 +- 0.404
238,knn,_scale = True; algorithm = ball_tree; leaf_size = 10; metric = minkowski; n_neighbors = 10; p = 1; weights = distance,f1 and cv,0.673 +- 0.232
239,mlp,_scale = True; activation = logistic; alpha = 0.00242931276589; batch_size = auto; hidden_layer_sizes[0] = 195; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.707 +- 0.291
240,mlp,_scale = True; activation = tanh; alpha = 0.00266562382463; batch_size = auto; hidden_layer_sizes[0] = 221; learning_rate = constant; learning_rate_init = 0.0228795034676; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.776 +- 0.187
241,mlp,_scale = True; activation = relu; alpha = 0.00205598323924; batch_size = auto; hidden_layer_sizes[0] = 55; hidden_layer_sizes[1] = 20; learning_rate = invscaling; learning_rate_init = 0.925931788017; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.734 +- 0.255
242,mlp,_scale = True; activation = relu; alpha = 0.000649033900464; batch_size = auto; beta_1 = 0.876033262692; beta_2 = 0.895049586659; hidden_layer_sizes[0] = 27; learning_rate_init = 0.143105264242; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.780 +- 0.375
243,knn,_scale = True; algorithm = ball_tree; leaf_size = 38; metric = manhattan; n_neighbors = 9; weights = distance,f1 and cv,0.751 +- 0.171
244,mlp,_scale = True; activation = tanh; alpha = 0.0013265392979; batch_size = auto; beta_1 = 0.943844591381; beta_2 = 0.947204916232; hidden_layer_sizes[0] = 62; learning_rate_init = 0.437697852476; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.718 +- 0.176
245,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 4; weights = uniform,f1 and cv,0.645 +- 0.318
246,mlp,_scale = True; activation = tanh; alpha = 0.00614748743749; batch_size = auto; beta_1 = 0.809114945577; beta_2 = 0.990605182173; hidden_layer_sizes[0] = 218; hidden_layer_sizes[1] = 50; hidden_layer_sizes[2] = 214; learning_rate_init = 0.158953806756; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.611 +- 0.631
247,mlp,_scale = True; activation = identity; alpha = 0.00467152728732; batch_size = auto; hidden_layer_sizes[0] = 239; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.693 +- 0.136
248,knn,_scale = True; algorithm = ball_tree; leaf_size = 42; metric = euclidean; n_neighbors = 13; weights = uniform,f1 and cv,0.599 +- 0.405
249,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.783 +- 0.234
250,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 10; weights = distance,f1 and cv,0.791 +- 0.242
251,mlp,_scale = True; activation = tanh; alpha = 0.00818619325238; batch_size = auto; hidden_layer_sizes[0] = 64; hidden_layer_sizes[1] = 247; hidden_layer_sizes[2] = 181; learning_rate = constant; learning_rate_init = 0.937549184535; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.551 +- 0.388
252,rf,criterion = entropy; max_depth = 2; max_features = 0.908161834155; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.771 +- 0.324
253,dt,criterion = gini; max_depth = 9; max_features = 0.206621728603; min_samples_leaf = 3; min_samples_split = 4,f1 and cv,0.609 +- 0.414
254,mlp,_scale = True; activation = tanh; alpha = 0.00439204791263; batch_size = auto; hidden_layer_sizes[0] = 152; hidden_layer_sizes[1] = 140; hidden_layer_sizes[2] = 137; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.426 +- 0.496
255,mlp,_scale = True; activation = identity; alpha = 0.00499907212969; batch_size = auto; hidden_layer_sizes[0] = 13; hidden_layer_sizes[1] = 225; learning_rate = adaptive; learning_rate_init = 0.95876802125; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.563 +- 0.731
256,mlp,_scale = True; activation = identity; alpha = 0.00834453755326; batch_size = auto; hidden_layer_sizes[0] = 124; hidden_layer_sizes[1] = 116; hidden_layer_sizes[2] = 242; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.770 +- 0.257
257,mlp,_scale = True; activation = relu; alpha = 0.00659089491028; batch_size = auto; hidden_layer_sizes[0] = 78; hidden_layer_sizes[1] = 205; learning_rate = adaptive; learning_rate_init = 0.200996550946; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.725 +- 0.274
258,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = euclidean; n_neighbors = 16; weights = uniform,f1 and cv,0.757 +- 0.379
259,mlp,_scale = True; activation = identity; alpha = 0.000532662580324; batch_size = auto; beta_1 = 0.883000256325; beta_2 = 0.985679904944; hidden_layer_sizes[0] = 264; hidden_layer_sizes[1] = 299; learning_rate_init = 0.788356525758; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.709 +- 0.299
260,mlp,_scale = True; activation = tanh; alpha = 0.00181218575585; batch_size = auto; hidden_layer_sizes[0] = 262; hidden_layer_sizes[1] = 37; learning_rate = adaptive; learning_rate_init = 0.513613365916; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.650 +- 0.452
261,mlp,_scale = True; activation = identity; alpha = 0.00425512975095; batch_size = auto; hidden_layer_sizes[0] = 7; learning_rate = adaptive; learning_rate_init = 0.0618833847181; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.752 +- 0.272
262,knn,_scale = True; algorithm = kd_tree; leaf_size = 36; metric = minkowski; n_neighbors = 6; p = 2; weights = uniform,f1 and cv,0.733 +- 0.323
263,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 4; weights = distance,f1 and cv,0.710 +- 0.186
264,mlp,_scale = True; activation = logistic; alpha = 0.00354360494334; batch_size = auto; beta_1 = 0.82693224625; beta_2 = 0.817798909972; hidden_layer_sizes[0] = 20; learning_rate_init = 0.452164272742; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.816 +- 0.496
265,knn,_scale = True; algorithm = kd_tree; leaf_size = 48; metric = minkowski; n_neighbors = 10; p = 2; weights = distance,f1 and cv,0.626 +- 0.642
266,mlp,_scale = True; activation = identity; alpha = 0.00543802988332; batch_size = auto; hidden_layer_sizes[0] = 12; learning_rate = constant; learning_rate_init = 0.877546109; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.709 +- 0.405
267,svm,C = 1.62680590415e-05; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 692; degree = 5; gamma = 0.412453389278; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.661 +- 0.228
268,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 9; weights = uniform,f1 and cv,0.774 +- 0.233
269,mlp,_scale = True; activation = relu; alpha = 0.00101355958991; batch_size = auto; hidden_layer_sizes[0] = 2; hidden_layer_sizes[1] = 167; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.734 +- 0.304
270,mlp,_scale = True; activation = relu; alpha = 0.00262922227938; batch_size = auto; hidden_layer_sizes[0] = 26; hidden_layer_sizes[1] = 40; hidden_layer_sizes[2] = 113; learning_rate = adaptive; learning_rate_init = 0.299887409962; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.777 +- 0.245
271,mlp,_scale = True; activation = tanh; alpha = 0.00271773637471; batch_size = auto; hidden_layer_sizes[0] = 119; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.749 +- 0.345
272,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 5; p = 1; weights = distance,f1 and cv,0.743 +- 0.445
273,mlp,_scale = True; activation = relu; alpha = 0.000626343626388; batch_size = auto; hidden_layer_sizes[0] = 145; hidden_layer_sizes[1] = 271; learning_rate = constant; learning_rate_init = 0.738766298476; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.771 +- 0.146
274,mlp,_scale = True; activation = tanh; alpha = 0.00385332691371; batch_size = auto; hidden_layer_sizes[0] = 215; learning_rate = adaptive; learning_rate_init = 0.483603069058; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.648 +- 0.076
275,knn,_scale = True; algorithm = ball_tree; leaf_size = 28; metric = manhattan; n_neighbors = 4; weights = uniform,f1 and cv,0.760 +- 0.271
276,knn,_scale = True; algorithm = kd_tree; leaf_size = 20; metric = chebyshev; n_neighbors = 3; weights = distance,f1 and cv,0.655 +- 0.280
277,mlp,_scale = True; activation = logistic; alpha = 0.000848257026879; batch_size = auto; hidden_layer_sizes[0] = 199; learning_rate = adaptive; learning_rate_init = 0.653372020353; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.703 +- 0.104
278,mlp,_scale = True; activation = logistic; alpha = 0.00419892412904; batch_size = auto; hidden_layer_sizes[0] = 132; learning_rate = invscaling; learning_rate_init = 0.675419025257; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.808 +- 0.160
279,mlp,_scale = True; activation = identity; alpha = 0.00338450371429; batch_size = auto; hidden_layer_sizes[0] = 61; hidden_layer_sizes[1] = 198; learning_rate = constant; learning_rate_init = 0.633056212575; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.688 +- 0.708
280,knn,_scale = True; algorithm = ball_tree; leaf_size = 35; metric = minkowski; n_neighbors = 7; p = 3; weights = uniform,f1 and cv,0.712 +- 0.205
281,mlp,_scale = True; activation = identity; alpha = 0.000989861481974; batch_size = auto; beta_1 = 0.826792157264; beta_2 = 0.929603696055; hidden_layer_sizes[0] = 258; hidden_layer_sizes[1] = 233; hidden_layer_sizes[2] = 101; learning_rate_init = 0.36232540548; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.689 +- 0.493
282,mlp,_scale = True; activation = tanh; alpha = 0.00620264986437; batch_size = auto; beta_1 = 0.851090764705; beta_2 = 0.895041241823; hidden_layer_sizes[0] = 180; hidden_layer_sizes[1] = 163; learning_rate_init = 0.480899000813; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.798 +- 0.278
283,knn,_scale = True; algorithm = kd_tree; leaf_size = 30; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.868 +- 0.069
284,dt,criterion = entropy; max_depth = 5; max_features = 0.849892428315; min_samples_leaf = 1; min_samples_split = 3,f1 and cv,0.699 +- 0.329
285,mlp,_scale = True; activation = logistic; alpha = 0.00292615838825; batch_size = auto; hidden_layer_sizes[0] = 111; hidden_layer_sizes[1] = 133; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.741 +- 0.297
286,mlp,_scale = True; activation = tanh; alpha = 0.00192212524063; batch_size = auto; hidden_layer_sizes[0] = 175; hidden_layer_sizes[1] = 173; hidden_layer_sizes[2] = 62; learning_rate = adaptive; learning_rate_init = 0.928033125073; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.591 +- 0.614
287,knn,_scale = True; algorithm = ball_tree; leaf_size = 16; metric = chebyshev; n_neighbors = 15; weights = distance,f1 and cv,0.680 +- 0.196
288,knn,_scale = True; algorithm = kd_tree; leaf_size = 4; metric = euclidean; n_neighbors = 19; weights = distance,f1 and cv,0.643 +- 0.651
289,svm,C = 106.323374676; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.821 +- 0.158
290,gp,alpha = 0.340932352507; kernel = rational_quadratic; length_scale = 1.23158862963,f1 and cv,0.623 +- 0.402
291,mlp,_scale = True; activation = logistic; alpha = 0.000565210040334; batch_size = auto; hidden_layer_sizes[0] = 201; hidden_layer_sizes[1] = 125; hidden_layer_sizes[2] = 51; learning_rate = invscaling; learning_rate_init = 0.233137263443; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.267 +- 0.653
292,mlp,_scale = True; activation = logistic; alpha = 0.00017320409652; batch_size = auto; beta_1 = 0.846859613319; beta_2 = 0.94537029331; hidden_layer_sizes[0] = 119; hidden_layer_sizes[1] = 56; learning_rate_init = 0.977563567719; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.386 +- 0.649
293,mlp,_scale = True; activation = logistic; alpha = 0.00259394948016; batch_size = auto; hidden_layer_sizes[0] = 66; hidden_layer_sizes[1] = 129; learning_rate = invscaling; learning_rate_init = 0.680402756435; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.283 +- 0.696
294,mlp,_scale = True; activation = identity; alpha = 0.00222570647724; batch_size = auto; hidden_layer_sizes[0] = 245; hidden_layer_sizes[1] = 285; hidden_layer_sizes[2] = 81; learning_rate = constant; learning_rate_init = 0.792386667536; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.439 +- 0.371
295,mlp,_scale = True; activation = identity; alpha = 0.00597399649341; batch_size = auto; hidden_layer_sizes[0] = 102; hidden_layer_sizes[1] = 126; hidden_layer_sizes[2] = 4; learning_rate = invscaling; learning_rate_init = 0.237457763006; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.716 +- 0.285
296,mlp,_scale = True; activation = logistic; alpha = 0.00104876965561; batch_size = auto; hidden_layer_sizes[0] = 42; learning_rate = constant; learning_rate_init = 0.564448785575; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.143 +- 0.571
297,mlp,_scale = True; activation = logistic; alpha = 0.00762424225727; batch_size = auto; hidden_layer_sizes[0] = 170; hidden_layer_sizes[1] = 66; hidden_layer_sizes[2] = 108; learning_rate = adaptive; learning_rate_init = 0.501482073517; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.667 +- 0.000
298,mlp,_scale = True; activation = relu; alpha = 0.00624514371129; batch_size = auto; beta_1 = 0.911687585984; beta_2 = 0.894605581229; hidden_layer_sizes[0] = 14; hidden_layer_sizes[1] = 73; hidden_layer_sizes[2] = 171; learning_rate_init = 0.945435557976; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.539 +- 0.546
299,mlp,_scale = True; activation = logistic; alpha = 0.00514509929195; batch_size = auto; hidden_layer_sizes[0] = 121; hidden_layer_sizes[1] = 85; learning_rate = constant; learning_rate_init = 0.509323405659; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.279 +- 0.684
300,mlp,_scale = True; activation = logistic; alpha = 0.00824536634614; batch_size = auto; beta_1 = 0.954249309354; beta_2 = 0.97068214188; hidden_layer_sizes[0] = 287; hidden_layer_sizes[1] = 9; hidden_layer_sizes[2] = 72; learning_rate_init = 0.987691072877; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.256 +- 0.629
301,mlp,_scale = True; activation = logistic; alpha = 0.00205265569295; batch_size = auto; hidden_layer_sizes[0] = 228; hidden_layer_sizes[1] = 128; learning_rate = adaptive; learning_rate_init = 0.184262424594; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.636 +- 0.671
302,logreg,C = 0.00137935604644; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 0.0145842190972,f1 and cv,0.818 +- 0.166
303,mlp,_scale = True; activation = identity; alpha = 0.00642725880585; batch_size = auto; hidden_layer_sizes[0] = 120; learning_rate = invscaling; learning_rate_init = 0.910605189017; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.751 +- 0.315
304,mlp,_scale = True; activation = tanh; alpha = 0.00259324962854; batch_size = auto; hidden_layer_sizes[0] = 204; hidden_layer_sizes[1] = 128; learning_rate = invscaling; learning_rate_init = 0.23371434887; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.675 +- 0.220
305,logreg,C = 85728.663831; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 0.00014382891317,f1 and cv,0.765 +- 0.126
306,logreg,C = 5.50467027847; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 0.000126567166882,f1 and cv,0.784 +- 0.179
307,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = distance,f1 and cv,0.860 +- 0.217
308,mlp,_scale = True; activation = identity; alpha = 0.00833430314328; batch_size = auto; beta_1 = 0.89867303735; beta_2 = 0.970351592919; hidden_layer_sizes[0] = 91; learning_rate_init = 0.67307423449; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.750 +- 0.258
309,rf,criterion = gini; max_depth = 3; max_features = 0.114447064015; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.843 +- 0.238
310,mlp,_scale = True; activation = tanh; alpha = 0.00160710817081; batch_size = auto; hidden_layer_sizes[0] = 279; learning_rate = invscaling; learning_rate_init = 0.046382134631; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.781 +- 0.085
311,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 6; p = 1; weights = uniform,f1 and cv,0.736 +- 0.309
312,logreg,C = 10407.6211163; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 0.00210492783993,f1 and cv,0.617 +- 0.213
313,svm,C = 0.195192060829; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 320; gamma = 4.6071140382e-05; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.667 +- 0.000
314,svm,C = 0.0166982107271; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 1.47623031275; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.246 +- 0.603
315,logreg,C = 1.46926593721; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.125761057813,f1 and cv,0.817 +- 0.236
316,mlp,_scale = True; activation = relu; alpha = 0.00256735204536; batch_size = auto; hidden_layer_sizes[0] = 26; learning_rate = invscaling; learning_rate_init = 0.859947803826; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.571 +- 0.339
317,knn,_scale = True; algorithm = kd_tree; leaf_size = 38; metric = chebyshev; n_neighbors = 14; weights = uniform,f1 and cv,0.655 +- 0.399
318,mlp,_scale = True; activation = relu; alpha = 0.000412743466647; batch_size = auto; hidden_layer_sizes[0] = 238; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.692 +- 0.135
319,mlp,_scale = True; activation = tanh; alpha = 0.00423020019596; batch_size = auto; hidden_layer_sizes[0] = 92; hidden_layer_sizes[1] = 273; hidden_layer_sizes[2] = 282; learning_rate = invscaling; learning_rate_init = 0.127087855813; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.677 +- 0.204
320,mlp,_scale = True; activation = relu; alpha = 0.0059523843558; batch_size = auto; hidden_layer_sizes[0] = 292; hidden_layer_sizes[1] = 58; hidden_layer_sizes[2] = 54; learning_rate = invscaling; learning_rate_init = 0.0861197808327; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.717 +- 0.258
321,mlp,_scale = True; activation = relu; alpha = 0.00837571236372; batch_size = auto; hidden_layer_sizes[0] = 234; hidden_layer_sizes[1] = 12; hidden_layer_sizes[2] = 9; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.622 +- 0.207
322,mlp,_scale = True; activation = relu; alpha = 0.00257777214607; batch_size = auto; beta_1 = 0.979336840211; beta_2 = 0.938477937719; hidden_layer_sizes[0] = 8; hidden_layer_sizes[1] = 118; learning_rate_init = 0.0163379670585; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.777 +- 0.373
323,mlp,_scale = True; activation = logistic; alpha = 0.00872884761682; batch_size = auto; hidden_layer_sizes[0] = 243; hidden_layer_sizes[1] = 181; hidden_layer_sizes[2] = 97; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.710 +- 0.196
324,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = euclidean; n_neighbors = 13; weights = distance,f1 and cv,0.767 +- 0.125
325,mlp,_scale = True; activation = relu; alpha = 0.00514834770096; batch_size = auto; hidden_layer_sizes[0] = 203; learning_rate = adaptive; learning_rate_init = 0.951744817527; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.746 +- 0.207
326,mlp,_scale = True; activation = relu; alpha = 0.00114783074356; batch_size = auto; hidden_layer_sizes[0] = 60; hidden_layer_sizes[1] = 143; hidden_layer_sizes[2] = 27; learning_rate = constant; learning_rate_init = 0.0201929038252; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.725 +- 0.266
327,mlp,_scale = True; activation = relu; alpha = 0.00221737610381; batch_size = auto; hidden_layer_sizes[0] = 126; learning_rate = constant; learning_rate_init = 0.896896646571; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.735 +- 0.174
328,mlp,_scale = True; activation = relu; alpha = 0.00797102730764; batch_size = auto; beta_1 = 0.869408487589; beta_2 = 0.919347184791; hidden_layer_sizes[0] = 27; learning_rate_init = 0.20497604802; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.845 +- 0.198
329,mlp,_scale = True; activation = tanh; alpha = 0.00628102451734; batch_size = auto; hidden_layer_sizes[0] = 221; learning_rate = constant; learning_rate_init = 0.0288070613664; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.799 +- 0.122
330,knn,_scale = True; algorithm = kd_tree; leaf_size = 39; metric = manhattan; n_neighbors = 18; weights = distance,f1 and cv,0.628 +- 0.263
331,mlp,_scale = True; activation = identity; alpha = 0.00131711859293; batch_size = auto; hidden_layer_sizes[0] = 7; hidden_layer_sizes[1] = 19; hidden_layer_sizes[2] = 17; learning_rate = adaptive; learning_rate_init = 0.937999844403; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
332,mnb,_scale_minmax = True; alpha = 0.00160241408131; class_prior = None; fit_prior = 1,f1 and cv,0.723 +- 0.337
333,mlp,_scale = True; activation = identity; alpha = 0.000755742071334; batch_size = auto; hidden_layer_sizes[0] = 165; hidden_layer_sizes[1] = 294; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.622 +- 0.207
334,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 10; weights = distance,f1 and cv,0.630 +- 0.485
335,gp,kernel = exp_sine_squared; length_scale = 6.15507927795; periodicity = 0,f1 and cv,0.688 +- 0.054
336,mlp,_scale = True; activation = identity; alpha = 0.00818602661631; batch_size = auto; hidden_layer_sizes[0] = 196; hidden_layer_sizes[1] = 12; learning_rate = invscaling; learning_rate_init = 0.746776772047; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.500 +- 0.516
337,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.722 +- 0.486
338,knn,_scale = True; algorithm = ball_tree; leaf_size = 38; metric = manhattan; n_neighbors = 9; weights = distance,f1 and cv,0.633 +- 0.309
339,mlp,_scale = True; activation = logistic; alpha = 0.00733017994509; batch_size = auto; beta_1 = 0.815657177898; beta_2 = 0.862696069458; hidden_layer_sizes[0] = 20; learning_rate_init = 0.126781354604; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.785 +- 0.278
340,mlp,_scale = True; activation = logistic; alpha = 0.000100818697748; batch_size = auto; hidden_layer_sizes[0] = 260; hidden_layer_sizes[1] = 11; hidden_layer_sizes[2] = 219; learning_rate = constant; learning_rate_init = 0.696671319052; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.410 +- 0.670
341,rf,criterion = entropy; max_depth = 2; max_features = 0.152026451055; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.886 +- 0.138
342,mlp,_scale = True; activation = relu; alpha = 0.00230093814755; batch_size = auto; hidden_layer_sizes[0] = 54; hidden_layer_sizes[1] = 17; learning_rate = invscaling; learning_rate_init = 0.69866885062; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.716 +- 0.352
343,mlp,_scale = True; activation = logistic; alpha = 0.00886844727295; batch_size = auto; hidden_layer_sizes[0] = 194; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.853 +- 0.259
344,mlp,_scale = True; activation = identity; alpha = 0.00869794386659; batch_size = auto; hidden_layer_sizes[0] = 281; hidden_layer_sizes[1] = 278; hidden_layer_sizes[2] = 126; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.731 +- 0.194
345,mlp,_scale = True; activation = tanh; alpha = 0.00469977201754; batch_size = auto; beta_1 = 0.837768716794; beta_2 = 0.822176639536; hidden_layer_sizes[0] = 63; learning_rate_init = 0.888794414192; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.787 +- 0.289
346,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.788 +- 0.254
347,mlp,_scale = True; activation = tanh; alpha = 0.00569633321217; batch_size = auto; hidden_layer_sizes[0] = 205; hidden_layer_sizes[1] = 134; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.698 +- 0.248
348,gp,kernel = exp_sine_squared; length_scale = 1.23127103237; periodicity = 1,f1 and cv,0.317 +- 0.527
349,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = euclidean; n_neighbors = 15; weights = uniform,f1 and cv,0.772 +- 0.124
350,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 9; weights = uniform,f1 and cv,0.698 +- 0.175
351,knn,_scale = True; algorithm = ball_tree; leaf_size = 10; metric = minkowski; n_neighbors = 10; p = 1; weights = distance,f1 and cv,0.838 +- 0.370
352,mlp,_scale = True; activation = identity; alpha = 0.00303723211783; batch_size = auto; hidden_layer_sizes[0] = 9; learning_rate = adaptive; learning_rate_init = 0.00851605918986; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.810 +- 0.191
353,mlp,_scale = True; activation = logistic; alpha = 0.00104428031269; batch_size = auto; hidden_layer_sizes[0] = 133; learning_rate = invscaling; learning_rate_init = 0.197305734958; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.524 +- 0.532
354,mlp,_scale = True; activation = relu; alpha = 0.00819604091558; batch_size = auto; hidden_layer_sizes[0] = 99; hidden_layer_sizes[1] = 64; hidden_layer_sizes[2] = 64; learning_rate = adaptive; learning_rate_init = 0.724897106283; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.643 +- 0.418
355,mlp,_scale = True; activation = relu; alpha = 0.00523273904536; batch_size = auto; hidden_layer_sizes[0] = 136; hidden_layer_sizes[1] = 272; learning_rate = constant; learning_rate_init = 0.194974768793; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.771 +- 0.272
356,mlp,_scale = True; activation = identity; alpha = 0.00859128532404; batch_size = auto; hidden_layer_sizes[0] = 238; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.818 +- 0.166
357,mlp,_scale = True; activation = relu; alpha = 0.00868522115008; batch_size = auto; hidden_layer_sizes[0] = 83; hidden_layer_sizes[1] = 209; learning_rate = adaptive; learning_rate_init = 0.0036031028349; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.734 +- 0.369
358,knn,_scale = True; algorithm = kd_tree; leaf_size = 35; metric = minkowski; n_neighbors = 7; p = 2; weights = uniform,f1 and cv,0.668 +- 0.439
359,mlp,_scale = True; activation = tanh; alpha = 0.00175019297081; batch_size = auto; hidden_layer_sizes[0] = 119; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.750 +- 0.333
360,mlp,_scale = True; activation = tanh; alpha = 0.00149016087289; batch_size = auto; beta_1 = 0.833563941202; beta_2 = 0.887136020847; hidden_layer_sizes[0] = 184; hidden_layer_sizes[1] = 159; learning_rate_init = 0.777270209309; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.700 +- 0.253
361,mlp,_scale = True; activation = identity; alpha = 0.00182936352472; batch_size = auto; beta_1 = 0.804827503638; beta_2 = 0.897454230843; hidden_layer_sizes[0] = 259; hidden_layer_sizes[1] = 297; learning_rate_init = 0.33999375309; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.803 +- 0.138
362,knn,_scale = True; algorithm = ball_tree; leaf_size = 28; metric = manhattan; n_neighbors = 4; weights = uniform,f1 and cv,0.715 +- 0.266
363,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 5; p = 1; weights = distance,f1 and cv,0.776 +- 0.146
364,mlp,_scale = True; activation = relu; alpha = 0.00145397343698; batch_size = auto; hidden_layer_sizes[0] = 2; hidden_layer_sizes[1] = 161; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.723 +- 0.172
365,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 4; weights = distance,f1 and cv,0.629 +- 0.093
366,mlp,_scale = True; activation = identity; alpha = 0.00473660648641; batch_size = auto; hidden_layer_sizes[0] = 12; learning_rate = constant; learning_rate_init = 0.441573946607; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.666 +- 0.421
367,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 5; weights = uniform,f1 and cv,0.690 +- 0.299
368,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 11; weights = uniform,f1 and cv,0.721 +- 0.183
369,mlp,_scale = True; activation = tanh; alpha = 0.00548795501913; batch_size = auto; beta_1 = 0.944574268838; beta_2 = 0.961187513145; hidden_layer_sizes[0] = 117; hidden_layer_sizes[1] = 203; hidden_layer_sizes[2] = 180; learning_rate_init = 0.8196348598; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.664 +- 0.256
370,svm,C = 45236.8060056; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.724 +- 0.362
371,mlp,_scale = True; activation = tanh; alpha = 0.00863031991079; batch_size = auto; hidden_layer_sizes[0] = 70; hidden_layer_sizes[1] = 121; learning_rate = adaptive; learning_rate_init = 0.21930917353; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.748 +- 0.285
372,svm,C = 3330.46315463; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 402; degree = 5; gamma = 495.798025791; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.663 +- 0.139
373,mlp,_scale = True; activation = logistic; alpha = 0.00560162739189; batch_size = auto; hidden_layer_sizes[0] = 199; learning_rate = adaptive; learning_rate_init = 0.216126073855; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.604 +- 0.126
374,dt,criterion = gini; max_depth = 9; max_features = 0.108945887204; min_samples_leaf = 3; min_samples_split = 4,f1 and cv,0.750 +- 0.227
375,knn,_scale = True; algorithm = ball_tree; leaf_size = 35; metric = minkowski; n_neighbors = 7; p = 3; weights = uniform,f1 and cv,0.750 +- 0.227
376,mlp,_scale = True; activation = logistic; alpha = 0.00842652778583; batch_size = auto; hidden_layer_sizes[0] = 114; hidden_layer_sizes[1] = 133; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.797 +- 0.311
377,knn,_scale = True; algorithm = ball_tree; leaf_size = 21; metric = euclidean; n_neighbors = 6; weights = uniform,f1 and cv,0.651 +- 0.513
378,mlp,_scale = True; activation = identity; alpha = 0.00401452209263; batch_size = auto; hidden_layer_sizes[0] = 61; hidden_layer_sizes[1] = 197; learning_rate = constant; learning_rate_init = 0.617695514235; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.615 +- 0.496
379,knn,_scale = True; algorithm = kd_tree; leaf_size = 49; metric = minkowski; n_neighbors = 10; p = 3; weights = distance,f1 and cv,0.670 +- 0.095
380,mlp,_scale = True; activation = tanh; alpha = 0.0073362195518; batch_size = auto; hidden_layer_sizes[0] = 215; learning_rate = adaptive; learning_rate_init = 0.0390695367536; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.861 +- 0.268
381,mlp,_scale = True; activation = identity; alpha = 0.00485582735763; batch_size = auto; beta_1 = 0.917131038685; beta_2 = 0.935884839678; hidden_layer_sizes[0] = 281; hidden_layer_sizes[1] = 265; hidden_layer_sizes[2] = 126; learning_rate_init = 0.221448368641; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.617 +- 0.548
382,dt,criterion = entropy; max_depth = 5; max_features = 0.166993450906; min_samples_leaf = 1; min_samples_split = 3,f1 and cv,0.429 +- 0.591
383,knn,_scale = True; algorithm = kd_tree; leaf_size = 20; metric = chebyshev; n_neighbors = 3; weights = distance,f1 and cv,0.672 +- 0.412
384,mlp,_scale = True; activation = identity; alpha = 0.00464886411401; batch_size = auto; hidden_layer_sizes[0] = 13; hidden_layer_sizes[1] = 232; learning_rate = adaptive; learning_rate_init = 0.0632747534908; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.816 +- 0.257
385,mlp,_scale = True; activation = tanh; alpha = 0.00401985656003; batch_size = auto; hidden_layer_sizes[0] = 52; hidden_layer_sizes[1] = 156; hidden_layer_sizes[2] = 213; learning_rate = constant; learning_rate_init = 0.332540258775; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.733 +- 0.415
386,knn,_scale = True; algorithm = ball_tree; leaf_size = 17; metric = chebyshev; n_neighbors = 15; weights = distance,f1 and cv,0.632 +- 0.277
387,knn,_scale = True; algorithm = kd_tree; leaf_size = 3; metric = euclidean; n_neighbors = 19; weights = distance,f1 and cv,0.773 +- 0.223
388,mlp,_scale = True; activation = tanh; alpha = 0.00305833390841; batch_size = auto; hidden_layer_sizes[0] = 34; hidden_layer_sizes[1] = 142; hidden_layer_sizes[2] = 145; learning_rate = adaptive; learning_rate_init = 0.112840364065; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.771 +- 0.272
389,gp,alpha = 0.182090203556; kernel = rational_quadratic; length_scale = 0.855181474309,f1 and cv,0.640 +- 0.371
390,mlp,_scale = True; activation = tanh; alpha = 0.00869573862285; batch_size = auto; hidden_layer_sizes[0] = 286; hidden_layer_sizes[1] = 69; hidden_layer_sizes[2] = 55; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.687 +- 0.262
391,mlp,_scale = True; activation = identity; alpha = 0.00845461272476; batch_size = auto; hidden_layer_sizes[0] = 226; hidden_layer_sizes[1] = 72; hidden_layer_sizes[2] = 276; learning_rate = invscaling; learning_rate_init = 0.93455425833; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.741 +- 0.356
392,mlp,_scale = True; activation = logistic; alpha = 0.00561501028415; batch_size = auto; hidden_layer_sizes[0] = 163; hidden_layer_sizes[1] = 68; hidden_layer_sizes[2] = 107; learning_rate = adaptive; learning_rate_init = 0.200200463088; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.747 +- 0.054
393,logreg,C = 1.60164244522e-05; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 1.01690187877,f1 and cv,0.859 +- 0.170
394,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = distance,f1 and cv,0.625 +- 0.387
395,mlp,_scale = True; activation = identity; alpha = 0.00119263797158; batch_size = auto; hidden_layer_sizes[0] = 122; learning_rate = invscaling; learning_rate_init = 0.934435482261; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.652 +- 0.485
396,rf,criterion = gini; max_depth = 3; max_features = 0.150862533492; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.761 +- 0.398
397,logreg,C = 0.967685528007; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 1.83932774191e-05,f1 and cv,0.709 +- 0.472
398,mlp,_scale = True; activation = identity; alpha = 0.00746032482678; batch_size = auto; hidden_layer_sizes[0] = 192; hidden_layer_sizes[1] = 126; hidden_layer_sizes[2] = 287; learning_rate = constant; learning_rate_init = 0.82811770041; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.296 +- 0.350
399,mlp,_scale = True; activation = logistic; alpha = 0.00359218773566; batch_size = auto; beta_1 = 0.90583908353; beta_2 = 0.900979473187; hidden_layer_sizes[0] = 32; hidden_layer_sizes[1] = 144; learning_rate_init = 0.28498347755; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.276 +- 0.677
400,mlp,_scale = True; activation = tanh; alpha = 0.00845076814561; batch_size = auto; hidden_layer_sizes[0] = 277; learning_rate = invscaling; learning_rate_init = 0.159481059923; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.622 +- 0.207
401,mlp,_scale = True; activation = relu; alpha = 0.000195331257204; batch_size = auto; beta_1 = 0.920194042804; beta_2 = 0.975423056122; hidden_layer_sizes[0] = 190; hidden_layer_sizes[1] = 59; hidden_layer_sizes[2] = 253; learning_rate_init = 0.169574009451; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.400 +- 0.653
402,mlp,_scale = True; activation = identity; alpha = 0.00329927031433; batch_size = auto; beta_1 = 0.941757958353; beta_2 = 0.984237582581; hidden_layer_sizes[0] = 93; learning_rate_init = 0.901945226902; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.701 +- 0.255
403,rf,criterion = entropy; max_depth = 2; max_features = 0.41285462442; min_samples_leaf = 2; n_estimators = 100; n_jobs = -1,f1 and cv,0.632 +- 0.368
404,mlp,_scale = True; activation = relu; alpha = 0.000428898465953; batch_size = auto; beta_1 = 0.959339229263; beta_2 = 0.994065423552; hidden_layer_sizes[0] = 27; learning_rate_init = 0.795784105474; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.850 +- 0.274
405,logreg,C = 4.5460426167; _scale = True; class_weight = balanced; fit_intercept = False; penalty = l1; tol = 1.40360408069e-05,f1 and cv,0.681 +- 0.304
406,mlp,_scale = True; activation = tanh; alpha = 0.0028229308381; batch_size = auto; hidden_layer_sizes[0] = 197; hidden_layer_sizes[1] = 135; learning_rate = invscaling; learning_rate_init = 0.168697613502; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.703 +- 0.225
407,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 6; p = 1; weights = uniform,f1 and cv,0.705 +- 0.435
408,logreg,C = 1252.28657932; _scale = True; class_weight = balanced; fit_intercept = True; penalty = l1; tol = 0.0136986779605,f1 and cv,0.807 +- 0.237
409,mlp,_scale = True; activation = logistic; alpha = 0.00741827562275; batch_size = auto; hidden_layer_sizes[0] = 194; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.590 +- 0.151
410,mlp,_scale = True; activation = tanh; alpha = 0.00622598644367; batch_size = auto; hidden_layer_sizes[0] = 270; learning_rate = constant; learning_rate_init = 0.354688363605; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.726 +- 0.206
411,mlp,_scale = True; activation = logistic; alpha = 0.00788566657083; batch_size = auto; hidden_layer_sizes[0] = 229; hidden_layer_sizes[1] = 126; learning_rate = adaptive; learning_rate_init = 0.950873013335; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.133 +- 0.533
412,knn,_scale = True; algorithm = ball_tree; leaf_size = 39; metric = euclidean; n_neighbors = 14; weights = distance,f1 and cv,0.826 +- 0.138
413,mlp,_scale = True; activation = relu; alpha = 0.00537555401414; batch_size = auto; hidden_layer_sizes[0] = 113; hidden_layer_sizes[1] = 197; hidden_layer_sizes[2] = 73; learning_rate = invscaling; learning_rate_init = 0.0267762886009; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.745 +- 0.274
414,mlp,_scale = True; activation = relu; alpha = 0.000745945658486; batch_size = auto; hidden_layer_sizes[0] = 236; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.695 +- 0.163
415,mlp,_scale = True; activation = relu; alpha = 0.000283001198362; batch_size = auto; hidden_layer_sizes[0] = 203; learning_rate = adaptive; learning_rate_init = 0.706117587961; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.749 +- 0.250
416,mlp,_scale = True; activation = logistic; alpha = 0.00730978534392; batch_size = auto; hidden_layer_sizes[0] = 230; hidden_layer_sizes[1] = 206; hidden_layer_sizes[2] = 134; learning_rate = invscaling; learning_rate_init = 0.440721884626; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.533 +- 0.533
417,knn,_scale = True; algorithm = ball_tree; leaf_size = 11; metric = minkowski; n_neighbors = 9; p = 1; weights = distance,f1 and cv,0.669 +- 0.364
418,mlp,_scale = True; activation = logistic; alpha = 0.000171271671167; batch_size = auto; beta_1 = 0.913623948599; beta_2 = 0.802750244192; hidden_layer_sizes[0] = 21; learning_rate_init = 0.339338004717; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.700 +- 0.082
419,mlp,_scale = True; activation = tanh; alpha = 0.00146966504813; batch_size = auto; hidden_layer_sizes[0] = 64; hidden_layer_sizes[1] = 284; hidden_layer_sizes[2] = 271; learning_rate = invscaling; learning_rate_init = 0.67622687065; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.676 +- 0.221
420,mlp,_scale = True; activation = logistic; alpha = 0.00284583323507; batch_size = auto; hidden_layer_sizes[0] = 284; hidden_layer_sizes[1] = 278; hidden_layer_sizes[2] = 29; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.615 +- 0.327
421,mlp,_scale = True; activation = relu; alpha = 0.00246551206649; batch_size = auto; hidden_layer_sizes[0] = 126; learning_rate = constant; learning_rate_init = 0.786268327469; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.757 +- 0.278
422,mlp,_scale = True; activation = relu; alpha = 0.0029147398737; batch_size = auto; hidden_layer_sizes[0] = 250; hidden_layer_sizes[1] = 65; hidden_layer_sizes[2] = 295; learning_rate = constant; learning_rate_init = 0.803964441675; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.699 +- 0.157
423,knn,_scale = True; algorithm = kd_tree; leaf_size = 27; metric = chebyshev; n_neighbors = 19; weights = uniform,f1 and cv,0.750 +- 0.059
424,mlp,_scale = True; activation = relu; alpha = 0.0081261216967; batch_size = auto; beta_1 = 0.908411404654; beta_2 = 0.847630903201; hidden_layer_sizes[0] = 12; hidden_layer_sizes[1] = 121; learning_rate_init = 0.143989380824; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.769 +- 0.428
425,mlp,_scale = True; activation = tanh; alpha = 0.00100939898622; batch_size = auto; beta_1 = 0.844457073643; beta_2 = 0.838067121764; hidden_layer_sizes[0] = 63; learning_rate_init = 0.717866049935; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.750 +- 0.170
426,mlp,_scale = True; activation = logistic; alpha = 0.00288914414818; batch_size = auto; hidden_layer_sizes[0] = 67; hidden_layer_sizes[1] = 142; learning_rate = invscaling; learning_rate_init = 0.352955841168; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.702 +- 0.490
427,knn,_scale = True; algorithm = kd_tree; leaf_size = 30; metric = manhattan; n_neighbors = 20; weights = uniform,f1 and cv,0.832 +- 0.124
428,mlp,_scale = True; activation = identity; alpha = 0.00140816205686; batch_size = auto; hidden_layer_sizes[0] = 10; learning_rate = adaptive; learning_rate_init = 0.0944175784958; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.750 +- 0.170
429,mlp,_scale = True; activation = identity; alpha = 0.00783662044065; batch_size = auto; hidden_layer_sizes[0] = 239; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.707 +- 0.294
430,mnb,_scale_minmax = True; alpha = 0.492055291906; class_prior = None; fit_prior = 1,f1 and cv,0.712 +- 0.456
431,logreg,C = 0.000278916797761; _scale = True; class_weight = balanced; dual = True; fit_intercept = False; penalty = l2; tol = 0.0206323536789,f1 and cv,0.663 +- 0.380
432,knn,_scale = True; algorithm = kd_tree; leaf_size = 29; metric = euclidean; n_neighbors = 15; weights = uniform,f1 and cv,0.794 +- 0.262
433,knn,_scale = True; algorithm = ball_tree; leaf_size = 12; metric = chebyshev; n_neighbors = 18; weights = uniform,f1 and cv,0.793 +- 0.068
434,mlp,_scale = True; activation = identity; alpha = 0.00208091410978; batch_size = auto; beta_1 = 0.816252078499; beta_2 = 0.870129705441; hidden_layer_sizes[0] = 34; hidden_layer_sizes[1] = 113; learning_rate_init = 0.389325580924; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.699 +- 0.337
435,logreg,C = 0.0296010907802; _scale = True; class_weight = balanced; dual = False; fit_intercept = False; penalty = l2; tol = 0.0158808734364,f1 and cv,0.830 +- 0.288
436,mlp,_scale = True; activation = relu; alpha = 0.000511133897707; batch_size = auto; hidden_layer_sizes[0] = 121; hidden_layer_sizes[1] = 30; hidden_layer_sizes[2] = 275; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.729 +- 0.307
437,mlp,_scale = True; activation = tanh; alpha = 0.00227938787745; batch_size = auto; hidden_layer_sizes[0] = 269; hidden_layer_sizes[1] = 262; learning_rate = constant; learning_rate_init = 0.140202485062; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.788 +- 0.240
438,mlp,_scale = True; activation = relu; alpha = 0.00593079281063; batch_size = auto; hidden_layer_sizes[0] = 52; hidden_layer_sizes[1] = 231; learning_rate = invscaling; learning_rate_init = 0.240954688484; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.881 +- 0.132
439,mlp,_scale = True; activation = identity; alpha = 0.00636815513417; batch_size = auto; hidden_layer_sizes[0] = 300; hidden_layer_sizes[1] = 136; hidden_layer_sizes[2] = 47; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.691 +- 0.238
440,mlp,_scale = True; activation = relu; alpha = 0.00162899152143; batch_size = auto; hidden_layer_sizes[0] = 143; hidden_layer_sizes[1] = 274; learning_rate = constant; learning_rate_init = 0.937026101117; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.500 +- 0.566
441,knn,_scale = True; algorithm = brute; metric = minkowski; n_neighbors = 5; p = 1; weights = distance,f1 and cv,0.753 +- 0.098
442,mlp,_scale = True; activation = relu; alpha = 0.00218070458954; batch_size = auto; hidden_layer_sizes[0] = 25; learning_rate = invscaling; learning_rate_init = 0.662341323068; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.583 +- 0.676
443,mlp,_scale = True; activation = tanh; alpha = 0.00062661613995; batch_size = auto; hidden_layer_sizes[0] = 214; learning_rate = adaptive; learning_rate_init = 0.945407980255; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.775 +- 0.128
444,mlp,_scale = True; activation = tanh; alpha = 0.00563969847861; batch_size = auto; hidden_layer_sizes[0] = 119; len(hidden_layer_sizes) = 1; solver = lbfgs,f1 and cv,0.803 +- 0.295
445,mlp,_scale = True; activation = relu; alpha = 0.000307091673804; batch_size = auto; hidden_layer_sizes[0] = 86; hidden_layer_sizes[1] = 212; learning_rate = adaptive; learning_rate_init = 0.908847725115; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.727 +- 0.338
446,mlp,_scale = True; activation = tanh; alpha = 0.00732152637602; batch_size = auto; hidden_layer_sizes[0] = 205; hidden_layer_sizes[1] = 139; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.791 +- 0.290
447,svm,C = 0.0368614581556; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = 318; gamma = 0.000384642071511; kernel = sigmoid; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.246 +- 0.603
448,knn,_scale = True; algorithm = kd_tree; leaf_size = 40; metric = manhattan; n_neighbors = 17; weights = distance,f1 and cv,0.902 +- 0.182
449,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 9; weights = uniform,f1 and cv,0.727 +- 0.193
450,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 10; weights = distance,f1 and cv,0.761 +- 0.398
451,mlp,_scale = True; activation = identity; alpha = 0.000426457511073; batch_size = auto; hidden_layer_sizes[0] = 161; hidden_layer_sizes[1] = 292; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.872 +- 0.175
452,knn,_scale = True; algorithm = ball_tree; leaf_size = 37; metric = manhattan; n_neighbors = 9; weights = distance,f1 and cv,0.638 +- 0.284
453,mlp,_scale = True; activation = logistic; alpha = 0.00540399487598; batch_size = auto; hidden_layer_sizes[0] = 115; hidden_layer_sizes[1] = 136; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.661 +- 0.700
454,mlp,_scale = True; activation = relu; alpha = 0.00771470852914; batch_size = auto; hidden_layer_sizes[0] = 5; hidden_layer_sizes[1] = 165; len(hidden_layer_sizes) = 2; solver = lbfgs,f1 and cv,0.842 +- 0.250
455,knn,_scale = True; algorithm = ball_tree; leaf_size = 28; metric = manhattan; n_neighbors = 4; weights = uniform,f1 and cv,0.681 +- 0.132
456,mlp,_scale = True; activation = tanh; alpha = 0.00253079358354; batch_size = auto; beta_1 = 0.823794545233; beta_2 = 0.948546494758; hidden_layer_sizes[0] = 295; hidden_layer_sizes[1] = 82; learning_rate_init = 0.667021938282; len(hidden_layer_sizes) = 2; solver = adam,f1 and cv,0.742 +- 0.308
457,knn,_scale = True; algorithm = brute; metric = euclidean; n_neighbors = 11; weights = uniform,f1 and cv,0.753 +- 0.249
458,mlp,_scale = True; activation = identity; alpha = 0.00685358608646; batch_size = auto; hidden_layer_sizes[0] = 11; hidden_layer_sizes[1] = 229; learning_rate = adaptive; learning_rate_init = 0.452907530524; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.676 +- 0.469
459,gp,kernel = exp_sine_squared; length_scale = 7.11795937741; periodicity = 0,f1 and cv,0.283 +- 0.696
460,mlp,_scale = True; activation = tanh; alpha = 0.0063995280768; batch_size = auto; hidden_layer_sizes[0] = 70; hidden_layer_sizes[1] = 123; learning_rate = adaptive; learning_rate_init = 0.58052736282; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.731 +- 0.163
461,knn,_scale = True; algorithm = kd_tree; leaf_size = 37; metric = minkowski; n_neighbors = 6; p = 3; weights = uniform,f1 and cv,0.729 +- 0.201
462,mlp,_scale = True; activation = relu; alpha = 0.00331037145362; batch_size = auto; hidden_layer_sizes[0] = 80; hidden_layer_sizes[1] = 270; hidden_layer_sizes[2] = 286; learning_rate = adaptive; learning_rate_init = 0.313104479189; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.700 +- 0.380
463,dt,criterion = gini; max_depth = 9; max_features = 0.138857531509; min_samples_leaf = 3; min_samples_split = 4,f1 and cv,0.644 +- 0.225
464,knn,_scale = True; algorithm = ball_tree; leaf_size = 34; metric = minkowski; n_neighbors = 7; p = 3; weights = uniform,f1 and cv,0.648 +- 0.436
465,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 5; weights = uniform,f1 and cv,0.682 +- 0.431
466,svm,C = 102.258926361; _scale = True; cache_size = 15000; class_weight = balanced; kernel = linear; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.677 +- 0.325
467,mlp,_scale = True; activation = identity; alpha = 0.00184403295863; batch_size = auto; hidden_layer_sizes[0] = 12; learning_rate = constant; learning_rate_init = 0.752839342155; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.791 +- 0.127
468,knn,_scale = True; algorithm = brute; metric = chebyshev; n_neighbors = 4; weights = distance,f1 and cv,0.709 +- 0.138
469,mlp,_scale = True; activation = tanh; alpha = 0.00137294889179; batch_size = auto; beta_1 = 0.959866560165; beta_2 = 0.821066085136; hidden_layer_sizes[0] = 284; hidden_layer_sizes[1] = 201; hidden_layer_sizes[2] = 255; learning_rate_init = 0.736644894148; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.569 +- 0.673
470,mlp,_scale = True; activation = identity; alpha = 0.000486219422539; batch_size = auto; hidden_layer_sizes[0] = 185; hidden_layer_sizes[1] = 9; learning_rate = invscaling; learning_rate_init = 0.641659882016; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.819 +- 0.154
471,mlp,_scale = True; activation = tanh; alpha = 0.00747570700742; batch_size = auto; hidden_layer_sizes[0] = 47; hidden_layer_sizes[1] = 208; hidden_layer_sizes[2] = 292; learning_rate = constant; learning_rate_init = 0.21112595927; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.798 +- 0.146
472,svm,C = 1.31126672447e-05; _scale = True; cache_size = 15000; class_weight = balanced; coef0 = -290; degree = 2; gamma = 0.00208706079903; kernel = poly; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.000 +- 0.000
473,knn,_scale = True; algorithm = kd_tree; leaf_size = 49; metric = minkowski; n_neighbors = 9; p = 2; weights = distance,f1 and cv,0.737 +- 0.280
474,knn,_scale = True; algorithm = ball_tree; leaf_size = 21; metric = euclidean; n_neighbors = 7; weights = uniform,f1 and cv,0.715 +- 0.189
475,knn,_scale = True; algorithm = kd_tree; leaf_size = 3; metric = euclidean; n_neighbors = 19; weights = distance,f1 and cv,0.741 +- 0.123
476,mlp,_scale = True; activation = logistic; alpha = 0.00396031698603; batch_size = auto; hidden_layer_sizes[0] = 124; hidden_layer_sizes[1] = 79; learning_rate = constant; learning_rate_init = 0.564636871594; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.552 +- 0.554
477,knn,_scale = True; algorithm = kd_tree; leaf_size = 20; metric = chebyshev; n_neighbors = 4; weights = distance,f1 and cv,0.667 +- 0.266
478,mlp,_scale = True; activation = logistic; alpha = 0.00556180166425; batch_size = auto; hidden_layer_sizes[0] = 131; learning_rate = invscaling; learning_rate_init = 0.160243869884; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.779 +- 0.237
479,mlp,_scale = True; activation = tanh; alpha = 0.00120699276098; batch_size = auto; hidden_layer_sizes[0] = 38; hidden_layer_sizes[1] = 145; hidden_layer_sizes[2] = 143; learning_rate = adaptive; learning_rate_init = 0.747669498487; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.770 +- 0.320
480,mlp,_scale = True; activation = logistic; alpha = 0.00444853705037; batch_size = auto; hidden_layer_sizes[0] = 199; learning_rate = adaptive; learning_rate_init = 0.0274133674446; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.743 +- 0.360
481,mlp,_scale = True; activation = logistic; alpha = 0.001720610868; batch_size = auto; hidden_layer_sizes[0] = 173; learning_rate = constant; learning_rate_init = 0.444987370156; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.623 +- 0.046
482,mlp,_scale = True; activation = identity; alpha = 0.000891053940475; batch_size = auto; hidden_layer_sizes[0] = 268; hidden_layer_sizes[1] = 65; learning_rate = constant; learning_rate_init = 0.739013351708; len(hidden_layer_sizes) = 2; solver = sgd,f1 and cv,0.407 +- 0.502
483,mlp,_scale = True; activation = identity; alpha = 0.00665577663657; batch_size = auto; beta_1 = 0.83627310194; beta_2 = 0.841887465659; hidden_layer_sizes[0] = 146; hidden_layer_sizes[1] = 239; hidden_layer_sizes[2] = 158; learning_rate_init = 0.383080936147; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.670 +- 0.315
484,knn,_scale = True; algorithm = ball_tree; leaf_size = 16; metric = chebyshev; n_neighbors = 15; weights = distance,f1 and cv,0.571 +- 0.369
485,mlp,_scale = True; activation = logistic; alpha = 0.00627313306934; batch_size = auto; beta_1 = 0.929895349149; beta_2 = 0.883694176744; hidden_layer_sizes[0] = 128; hidden_layer_sizes[1] = 71; hidden_layer_sizes[2] = 189; learning_rate_init = 0.208134673461; len(hidden_layer_sizes) = 3; solver = adam,f1 and cv,0.369 +- 0.603
486,mlp,_scale = True; activation = identity; alpha = 0.00453565697523; batch_size = auto; hidden_layer_sizes[0] = 294; hidden_layer_sizes[1] = 36; hidden_layer_sizes[2] = 107; learning_rate = invscaling; learning_rate_init = 0.151870545818; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.789 +- 0.087
487,mlp,_scale = True; activation = tanh; alpha = 0.0043695975583; batch_size = auto; hidden_layer_sizes[0] = 84; hidden_layer_sizes[1] = 84; hidden_layer_sizes[2] = 296; len(hidden_layer_sizes) = 3; solver = lbfgs,f1 and cv,0.743 +- 0.212
488,logreg,C = 1.52099093805e-05; _scale = True; class_weight = balanced; dual = False; fit_intercept = True; penalty = l2; tol = 0.493534653924,f1 and cv,0.793 +- 0.158
489,gp,alpha = 0.00587756090147; kernel = rational_quadratic; length_scale = 0.778148394697,f1 and cv,0.468 +- 0.592
490,mlp,_scale = True; activation = logistic; alpha = 0.00078367842815; batch_size = auto; hidden_layer_sizes[0] = 169; hidden_layer_sizes[1] = 67; hidden_layer_sizes[2] = 109; learning_rate = adaptive; learning_rate_init = 0.275981871226; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.133 +- 0.533
491,dt,criterion = entropy; max_depth = 5; max_features = 0.667360237316; min_samples_leaf = 1; min_samples_split = 3,f1 and cv,0.601 +- 0.208
492,mlp,_scale = True; activation = logistic; alpha = 0.00691480278598; batch_size = auto; hidden_layer_sizes[0] = 217; hidden_layer_sizes[1] = 264; hidden_layer_sizes[2] = 30; learning_rate = constant; learning_rate_init = 0.16514303414; len(hidden_layer_sizes) = 3; solver = sgd,f1 and cv,0.000 +- 0.000
493,rf,criterion = gini; max_depth = 3; max_features = 0.10933184867; min_samples_leaf = 3; n_estimators = 100; n_jobs = -1,f1 and cv,0.676 +- 0.456
494,mlp,_scale = True; activation = relu; alpha = 0.00769076251375; batch_size = auto; beta_1 = 0.852683579836; beta_2 = 0.985173521755; hidden_layer_sizes[0] = 26; learning_rate_init = 0.578940068582; len(hidden_layer_sizes) = 1; solver = adam,f1 and cv,0.712 +- 0.205
495,knn,_scale = True; algorithm = brute; metric = manhattan; n_neighbors = 20; weights = distance,f1 and cv,0.769 +- 0.203
496,knn,_scale = True; algorithm = ball_tree; leaf_size = 38; metric = euclidean; n_neighbors = 14; weights = distance,f1 and cv,0.767 +- 0.149
497,mlp,_scale = True; activation = identity; alpha = 0.00652788140446; batch_size = auto; hidden_layer_sizes[0] = 121; learning_rate = invscaling; learning_rate_init = 0.904858902526; len(hidden_layer_sizes) = 1; solver = sgd,f1 and cv,0.829 +- 0.355
498,logreg,C = 2.61823955419; _scale = True; class_weight = balanced; dual = True; fit_intercept = True; penalty = l2; tol = 0.405019619021,f1 and cv,0.743 +- 0.086
499,svm,C = 4.98940364301e-05; _scale = True; cache_size = 15000; class_weight = balanced; gamma = 0.445917007271; kernel = rbf; max_iter = 50000; probability = True; shrinking = True,f1 and cv,0.286 +- 0.700
